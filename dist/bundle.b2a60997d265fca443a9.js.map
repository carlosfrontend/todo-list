{"version":3,"file":"bundle.b2a60997d265fca443a9.js","mappings":"mBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,G,MCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,IAAMT,GAAWA,EAAYM,EAAQG,KAAKJ,GAExD,CAID,IAAKL,EAAW,MAAM,IAAIU,MAAM,yDAChCV,EAAYA,EAAUW,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFlB,EAAoBmB,EAAIZ,C,4BCNxB,QAXmB,WACjB,IAAMa,EAAOV,SAASW,cAAc,SAC9BC,EAAUZ,SAASW,cAAc,YACjCE,EAAeb,SAASW,cAAc,iBAE5CC,EAAQE,MAAMC,QAAU,OACxBL,EAAKI,MAAME,WAAa,MACxBH,EAAaI,YAAc,OAC3BJ,EAAaK,UAAUV,QAAQ,YAAa,aAC9C,ECEA,QAXmB,WACjB,IAAME,EAAOV,SAASW,cAAc,SAC9BC,EAAUZ,SAASW,cAAc,YACjCE,EAAeb,SAASW,cAAc,iBAE5CC,EAAQE,MAAMC,QAAU,OACxBL,EAAKI,MAAME,WAAa,MACxBH,EAAaI,YAAc,YAC3BJ,EAAaK,UAAUV,QAAQ,aAAc,YAC/C,ECUA,QAfyB,WACvB,IAAMK,EAAeb,SAASW,cAAc,iBACxCf,OAAOuB,WAAa,KACtBN,EAAaI,YAAc,OAC3BJ,EAAaK,UAAUE,OAAO,aAC9BP,EAAaK,UAAUG,IAAI,cAC3BC,MAEAT,EAAaI,YAAc,YAC3BJ,EAAaK,UAAUE,OAAO,aAC9BP,EAAaK,UAAUG,IAAI,aAC3BE,IAEJ,EClBA,SAASC,IACP,IAAMZ,EAAUZ,SAASW,cAAc,YACjCD,EAAOV,SAASW,cAAc,SAC9BE,EAAeb,SAASW,cAAc,iBAC5CE,EAAaK,UAAUO,OAAO,aAC9BZ,EAAaK,UAAUO,OAAO,cACD,cAA7BZ,EAAaI,YACRJ,EAAaI,YAAc,OAC3BJ,EAAaI,YAAc,YACC,cAA7BJ,EAAaI,aACfL,EAAQE,MAAMC,QAAU,OACxBL,EAAKI,MAAME,WAAa,QAExBJ,EAAQE,MAAMC,QAAU,OACxBL,EAAKI,MAAME,WAAa,MAE5B,CCRA,QARmB,WAIjBU,aAAaC,QAAQ,UAAWC,KAAKC,UAHrB,KAIhBH,aAAaC,QAAQ,aAAcC,KAAKC,UAHrB,IAIrB,ECCA,QAPoB,WAClB,IAAMC,EAAU9B,SAAS+B,cAAc,MAGvC,OAFAD,EAAQb,YAAc,iBACtBa,EAAQZ,UAAUG,IAAI,SACfS,CACT,ECEA,QALa,WACI9B,SAASW,cAAc,SAC/BqB,YAAYC,IACrB,ECGA,IAAMC,EAASlC,SAASW,cAAc,SACtCuB,EAAOhC,IAAMiC,EACbD,EAAOE,IAAM,iBAEQpC,SAASW,cAAc,iBAG5Cf,OAAOyC,iBAAiB,oBAAoB,WAC1CC,GACF,IAEA1C,OAAOyC,iBAAiB,UAAU,WAChCC,GACF,IJFEzB,aAAawB,iBAAiB,QAASb,GIUzCe,IAIAC,G","sources":["webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/global","webpack://todo-list/webpack/runtime/publicPath","webpack://todo-list/./src/UI/Panel/hidesPanel.js","webpack://todo-list/./src/UI/Panel/showsPanel.js","webpack://todo-list/./src/UI/Panel/togglePanelIcons.js","webpack://todo-list/./src/UI/Panel/togglePanel.js","webpack://todo-list/./src/DB/todoListDB.js","webpack://todo-list/./src/UI/Panel/Views/notYetTasks/notYetTasks.js","webpack://todo-list/./src/init.js","webpack://todo-list/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// Hides the left panel\nconst hidesPanel = () => {\n  const main = document.querySelector(\".main\");\n  const sidebar = document.querySelector(\".sidebar\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n\n  sidebar.style.display = \"none\";\n  main.style.gridColumn = \"1/3\";\n  toggPanelBtn.textContent = \"menu\";\n  toggPanelBtn.classList.replace('menu-open', 'menu-close');\n};\n\nexport default hidesPanel;\n","// Shows the left panel\nconst showsPanel = () => {\n  const main = document.querySelector(\".main\");\n  const sidebar = document.querySelector(\".sidebar\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n\n  sidebar.style.display = \"grid\";\n  main.style.gridColumn = \"2/3\";\n  toggPanelBtn.textContent = 'menu_open';\n  toggPanelBtn.classList.replace('menu-close', 'menu-open');\n};\n\nexport default showsPanel;\n","import hidesPanel from \"./hidesPanel\";\nimport showsPanel from \"./showsPanel\";\n\n// Change the open and close panel icons depending on the width of the window\n\nconst togglePanelIcons = () => {\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n  if (window.innerWidth < 700) {\n    toggPanelBtn.textContent = \"menu\";\n    toggPanelBtn.classList.remove(\"menu-open\");\n    toggPanelBtn.classList.add(\"menu-close\");\n    hidesPanel();\n  } else {\n    toggPanelBtn.textContent = \"menu_open\";\n    toggPanelBtn.classList.remove(\"menu-cloe\");\n    toggPanelBtn.classList.add(\"menu-open\");\n    showsPanel();\n  }\n};\n\nexport default togglePanelIcons;\n","function handlePanel() {\n  const sidebar = document.querySelector(\".sidebar\");\n  const main = document.querySelector(\".main\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n  toggPanelBtn.classList.toggle(\"menu-open\");\n  toggPanelBtn.classList.toggle(\"menu-close\");\n  toggPanelBtn.textContent === \"menu_open\"\n    ? (toggPanelBtn.textContent = \"menu\")\n    : (toggPanelBtn.textContent = \"menu_open\");\n  if (toggPanelBtn.textContent === \"menu_open\") {\n    sidebar.style.display = \"grid\";\n    main.style.gridColumn = \"2/3\";\n  } else {\n    sidebar.style.display = \"none\";\n    main.style.gridColumn = \"1/3\";\n  }\n}\n\nexport function togglePanel() {\n  toggPanelBtn.addEventListener(\"click\", handlePanel);\n}\n","const todoListDB = () => {\n  const myTasks = [];\n  const myProjects = [];\n\n  localStorage.setItem(\"myTasks\", JSON.stringify(myTasks));\n  localStorage.setItem(\"myProjects\", JSON.stringify(myProjects));\n};\n\nexport default todoListDB;\n","const notYetTasks = () => {\n  const element = document.createElement(\"h1\");\n  element.textContent = \"No yet Tasks !\";\n  element.classList.add(\"noyet\");\n  return element;\n};\n\nexport default notYetTasks;\n","import notYetTasks from \"./UI/Panel/Views/notYetTasks/notYetTasks\";\n\nconst init = () => {\n    const main = document.querySelector(\".main\");\n    main.appendChild(notYetTasks());\n}\n\nexport default init;","import \"./styles/main.css\";\nimport logoImg from \"./img/logo.svg\";\nimport togglePanelIcons from \"./UI/Panel/togglePanelIcons\";\nimport { togglePanel } from \"./UI/Panel/togglePanel\";\nimport todoListDB from \"./DB/todoListDB\";\nimport init from \"./init\";\n\n// Injects the main Logo\nconst myLogo = document.querySelector(\".logo\");\nmyLogo.src = logoImg;\nmyLogo.alt = \"Todo List Logo\";\n\nconst toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n\n// Change the sidebar open and close icons when the DOM is loaded in function of the window width\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  togglePanelIcons();\n});\n// Change the sidebar open and close icons when the window is resized in function of the window width\nwindow.addEventListener(\"resize\", () => {\n  togglePanelIcons();\n});\n\n// Toggle the Panel at click on panel button\ntogglePanel();\n\n\n// Start the database\n\ntodoListDB();\n\n// Start UI\n\ninit();"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","main","querySelector","sidebar","toggPanelBtn","style","display","gridColumn","textContent","classList","innerWidth","remove","add","hidesPanel","showsPanel","handlePanel","toggle","localStorage","setItem","JSON","stringify","element","createElement","appendChild","notYetTasks","myLogo","logoImg","alt","addEventListener","togglePanelIcons","todoListDB","init"],"sourceRoot":""}