{"version":3,"file":"main.8c885ed709624193d79e.js","mappings":"mBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,G,MCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,IAAMT,GAAWA,EAAYM,EAAQG,KAAKJ,GAExD,CAID,IAAKL,EAAW,MAAM,IAAIU,MAAM,yDAChCV,EAAYA,EAAUW,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFlB,EAAoBmB,EAAIZ,C,6ECPxB,EAVmB,KACjB,MAAMa,EAAOV,SAASW,cAAc,SAC9BC,EAAUZ,SAASW,cAAc,YACjCE,EAAeb,SAASW,cAAc,iBAE5CC,EAAQE,MAAMC,QAAU,OACxBL,EAAKI,MAAME,WAAa,MACxBH,EAAaI,YAAc,MAAM,ECInC,EAXmB,KACjB,MAAMP,EAAOV,SAASW,cAAc,SAC9BC,EAAUZ,SAASW,cAAc,YACjCE,EAAeb,SAASW,cAAc,iBAE5CC,EAAQE,MAAMC,QAAU,OACxBL,EAAKI,MAAME,WAAa,MACxBH,EAAaI,YAAc,YAC3BJ,EAAaK,UAAUV,QAAQ,aAAc,YAAY,ECS3D,EAfyB,KACvB,MAAMK,EAAeb,SAASW,cAAc,iBACxCf,OAAOuB,YAAc,KACvBN,EAAaI,YAAc,OAC3BJ,EAAaK,UAAUE,OAAO,aAC9BP,EAAaK,UAAUG,IAAI,cAC3B,MAEAR,EAAaI,YAAc,YAC3BJ,EAAaK,UAAUE,OAAO,aAC9BP,EAAaK,UAAUG,IAAI,aAC3B,IACF,ECOF,QAnBA,WACkBrB,SAASW,cAAc,YAC1BX,SAASW,cAAc,SADpC,MAEME,EAAeb,SAASW,cAAc,iBAC3CE,EAAaK,UAAUI,OAAO,aAC/BT,EAAaK,UAAUI,OAAO,cACD,cAA7BT,EAAaI,YACRJ,EAAaI,YAAc,OAC3BJ,EAAaI,YAAc,YAEC,cAA7BJ,EAAaI,aACfJ,EAAaI,YAAc,YAC3B,MAEAJ,EAAaI,YAAc,OAC3B,IAEJ,ECVA,EAV4B,KAC1B,MAAMM,EAAgBvB,SAASW,cAAc,oBACvCa,EAAkBxB,SAASW,cAAc,eAC/CY,EAAcE,YAEdD,EAAgBE,iBAAiB,SAAS,KACxCH,EAAcI,OAAO,GACrB,ECGJ,EAVkBhC,IAChB,MAAMiC,EAAc5B,SAASW,cAAc,iBAClB,gBAAzBhB,EAAEkC,OAAOZ,YACJtB,EAAEkC,OAAOZ,YAAc,cACvBtB,EAAEkC,OAAOZ,YAAc,cACH,gBAAzBtB,EAAEkC,OAAOZ,YACJW,EAAYd,MAAMC,QAAU,OAC5Ba,EAAYd,MAAMC,QAAU,OAAQ,ECE3C,EAT+B,KAC7B,MAAMe,EAAY9B,SAASW,cAAc,uBACnCoB,EAAgB/B,SAASW,cAAc,uBAC7CmB,EAAUL,YACVM,EAAcL,iBAAiB,SAAS,KACtCI,EAAUH,OAAO,GACjB,EC0BG,SAASK,EAAOC,GACrB,OACEA,aAAiBC,MACC,iBAAVD,GACoC,kBAA1CE,OAAOC,UAAUC,SAASC,KAAKL,EAErC,CCNO,SAASM,EAAOC,GACrB,MAAMC,EAASN,OAAOC,UAAUC,SAASC,KAAKE,GAG9C,OACEA,aAAoBN,MACC,iBAAbM,GAAoC,kBAAXC,EAG1B,IAAID,EAASE,aAAaF,GAEb,iBAAbA,GACI,oBAAXC,GACoB,iBAAbD,GACI,oBAAXC,EAGO,IAAIP,KAAKM,GAGT,IAAIN,KAAKS,IAEpB,CClBO,SAASC,EAAQC,GACtB,IAAKb,EAAOa,IAAyB,iBAATA,EAC1B,OAAO,EAET,MAAMC,EAAQP,EAAOM,GACrB,OAAQE,MAAMC,OAAOF,GACvB,CAGA,MC7CMG,EAAuB,CAC3BC,iBAAkB,CAChBC,IAAK,qBACLC,MAAO,+BAGTC,SAAU,CACRF,IAAK,WACLC,MAAO,qBAGTE,YAAa,gBAEbC,iBAAkB,CAChBJ,IAAK,qBACLC,MAAO,+BAGTI,SAAU,CACRL,IAAK,WACLC,MAAO,qBAGTK,YAAa,CACXN,IAAK,eACLC,MAAO,yBAGTM,OAAQ,CACNP,IAAK,SACLC,MAAO,mBAGTO,MAAO,CACLR,IAAK,QACLC,MAAO,kBAGTQ,YAAa,CACXT,IAAK,eACLC,MAAO,yBAGTS,OAAQ,CACNV,IAAK,SACLC,MAAO,mBAGTU,aAAc,CACZX,IAAK,gBACLC,MAAO,0BAGTW,QAAS,CACPZ,IAAK,UACLC,MAAO,oBAGTY,YAAa,CACXb,IAAK,eACLC,MAAO,yBAGTa,OAAQ,CACNd,IAAK,SACLC,MAAO,mBAGTc,WAAY,CACVf,IAAK,cACLC,MAAO,wBAGTe,aAAc,CACZhB,IAAK,gBACLC,MAAO,2BC3EJ,SAASgB,EAAkBC,GAChC,MAAO,CAACC,EAAU,CAAC,KAEjB,MAAMC,EAAQD,EAAQC,MAAQC,OAAOF,EAAQC,OAASF,EAAKI,aAE3D,OADeJ,EAAKK,QAAQH,IAAUF,EAAKK,QAAQL,EAAKI,aAC3C,CAEjB,CCLA,MAqBaE,EAAa,CACxB9B,KAAMuB,EAAkB,CACtBM,QAvBgB,CAClBE,KAAM,mBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,cAoBLN,aAAc,SAGhBO,KAAMZ,EAAkB,CACtBM,QArBgB,CAClBE,KAAM,iBACNC,KAAM,cACNC,OAAQ,YACRC,MAAO,UAkBLN,aAAc,SAGhBQ,SAAUb,EAAkB,CAC1BM,QAnBoB,CACtBE,KAAM,yBACNC,KAAM,yBACNC,OAAQ,qBACRC,MAAO,sBAgBLN,aAAc,UCpCZS,EAAuB,CAC3BC,SAAU,qBACVC,UAAW,mBACXC,MAAO,eACPC,SAAU,kBACVC,SAAU,cACVnC,MAAO,KCmCF,SAASoC,EAAgBnB,GAC9B,MAAO,CAACpC,EAAOqC,KAGb,IAAImB,EACJ,GAAgB,gBAHAnB,GAASoB,QAAUlB,OAAOF,EAAQoB,SAAW,eAG7BrB,EAAKsB,iBAAkB,CACrD,MAAMlB,EAAeJ,EAAKuB,wBAA0BvB,EAAKI,aACnDF,EAAQD,GAASC,MAAQC,OAAOF,EAAQC,OAASE,EAEvDgB,EACEpB,EAAKsB,iBAAiBpB,IAAUF,EAAKsB,iBAAiBlB,EAC1D,KAAO,CACL,MAAMA,EAAeJ,EAAKI,aACpBF,EAAQD,GAASC,MAAQC,OAAOF,EAAQC,OAASF,EAAKI,aAE5DgB,EAAcpB,EAAKwB,OAAOtB,IAAUF,EAAKwB,OAAOpB,EAClD,CAIA,OAAOgB,EAHOpB,EAAKyB,iBAAmBzB,EAAKyB,iBAAiB7D,GAASA,EAG5C,CAE7B,CC/DO,SAAS8D,EAAa1B,GAC3B,MAAO,CAAC2B,EAAQ1B,EAAU,CAAC,KACzB,MAAMC,EAAQD,EAAQC,MAEhB0B,EACH1B,GAASF,EAAK6B,cAAc3B,IAC7BF,EAAK6B,cAAc7B,EAAK8B,mBACpBC,EAAcJ,EAAOK,MAAMJ,GAEjC,IAAKG,EACH,OAAO,KAET,MAAME,EAAgBF,EAAY,GAE5BG,EACHhC,GAASF,EAAKkC,cAAchC,IAC7BF,EAAKkC,cAAclC,EAAKmC,mBAEpBC,EAAMC,MAAMC,QAAQJ,GA+B9B,SAAmBK,EAAOC,GACxB,IAAK,IAAIJ,EAAM,EAAGA,EAAMG,EAAMvG,OAAQoG,IACpC,GAAII,EAAUD,EAAMH,IAClB,OAAOA,EAGX,MACF,CArCQK,CAAUP,GAAgBQ,GAAYA,EAAQC,KAAKV,KAkB3D,SAAiBW,EAAQJ,GACvB,IAAK,MAAMJ,KAAOQ,EAChB,GACE9E,OAAOC,UAAU8E,eAAe5E,KAAK2E,EAAQR,IAC7CI,EAAUI,EAAOR,IAEjB,OAAOA,EAGX,MACF,CA1BQU,CAAQZ,GAAgBQ,GAAYA,EAAQC,KAAKV,KAErD,IAAIrE,EAEJA,EAAQoC,EAAK+C,cAAgB/C,EAAK+C,cAAcX,GAAOA,EACvDxE,EAAQqC,EAAQ8C,cAEZ9C,EAAQ8C,cAAcnF,GACtBA,EAIJ,MAAO,CAAEA,QAAOoF,KAFHrB,EAAOsB,MAAMhB,EAAcjG,QAElB,CAE1B,CCnCO,IAA6BgE,ECc7B,MAAMkD,EAAO,CAClBC,KAAM,QACNC,eP+D4B,CAACC,EAAOC,EAAOrD,KAC3C,IAAIsD,EAEJ,MAAMC,EAAa5E,EAAqByE,GASxC,OAPEE,EADwB,iBAAfC,EACAA,EACU,IAAVF,EACAE,EAAW1E,IAEX0E,EAAWzE,MAAM5C,QAAQ,YAAamH,EAAMtF,YAGnDiC,GAASwD,UACPxD,EAAQyD,YAAczD,EAAQyD,WAAa,EACtC,MAAQH,EAERA,EAAS,OAIbA,CAAM,EOlFbjD,WAAYA,EACZqD,eJT4B,CAACN,EAAO5E,EAAOmF,EAAWC,IACtDhD,EAAqBwC,GISrBS,SCyIsB,CACtBC,cAzBoB,CAACC,EAAaH,KAClC,MAAMI,EAAStF,OAAOqF,GAShBE,EAASD,EAAS,IACxB,GAAIC,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOD,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAGtB,OAAOA,EAAS,IAAI,EAMpBE,IAAKhD,EAAgB,CACnBK,OA9Jc,CAChB4C,OAAQ,CAAC,IAAK,KACdC,YAAa,CAAC,KAAM,MACpBC,KAAM,CAAC,gBAAiB,gBA4JtBlE,aAAc,SAGhBmE,QAASpD,EAAgB,CACvBK,OA7JkB,CACpB4C,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,cAAe,cAAe,cAAe,gBA2JlDlE,aAAc,OACdqB,iBAAmB8C,GAAYA,EAAU,IAG3CC,MAAOrD,EAAgB,CACrBK,OAzJgB,CAClB4C,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFC,KAAM,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aA6HAlE,aAAc,SAGhBqE,IAAKtD,EAAgB,CACnBK,OA7Hc,CAChB4C,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvC1D,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5C2D,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,aAmHAlE,aAAc,SAGhBsE,UAAWvD,EAAgB,CACzBK,OAnHoB,CACtB4C,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,UAuFP9E,aAAc,OACdkB,iBApF8B,CAChC8C,OAAQ,CACNO,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETb,YAAa,CACXM,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETZ,KAAM,CACJK,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,aAwDP3D,uBAAwB,UDpK1BS,MEqEmB,CACnB+B,eH1FkC/D,EG0FC,CACjC4B,aAxF8B,wBAyF9BuD,aAxF8B,OAyF9BpC,cAAgBnF,GAAUwH,SAASxH,EAAO,KH5FrC,CAAC+D,EAAQ1B,EAAU,CAAC,KACzB,MAAM8B,EAAcJ,EAAOK,MAAMhC,EAAK4B,cACtC,IAAKG,EAAa,OAAO,KACzB,MAAME,EAAgBF,EAAY,GAE5BsD,EAAc1D,EAAOK,MAAMhC,EAAKmF,cACtC,IAAKE,EAAa,OAAO,KACzB,IAAIzH,EAAQoC,EAAK+C,cACb/C,EAAK+C,cAAcsC,EAAY,IAC/BA,EAAY,GAOhB,OAJAzH,EAAQqC,EAAQ8C,cAAgB9C,EAAQ8C,cAAcnF,GAASA,EAIxD,CAAEA,QAAOoF,KAFHrB,EAAOsB,MAAMhB,EAAcjG,QAElB,GG+ExBmI,IAAKzC,EAAa,CAChBG,cA3FqB,CACvBuC,OAAQ,UACRC,YAAa,6DACbC,KAAM,8DAyFJxC,kBAAmB,OACnBI,cAxFqB,CACvBoD,IAAK,CAAC,MAAO,YAwFXnD,kBAAmB,QAGrBoC,QAAS7C,EAAa,CACpBG,cAzFyB,CAC3BuC,OAAQ,WACRC,YAAa,YACbC,KAAM,kCAuFJxC,kBAAmB,OACnBI,cAtFyB,CAC3BoD,IAAK,CAAC,KAAM,KAAM,KAAM,OAsFtBnD,kBAAmB,MACnBY,cAAgBwC,GAAUA,EAAQ,IAGpCf,MAAO9C,EAAa,CAClBG,cAxFuB,CACzBuC,OAAQ,eACRC,YAAa,sDACbC,KAAM,6FAsFJxC,kBAAmB,OACnBI,cArFuB,CACzBkC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFkB,IAAK,CACH,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,MACA,MACA,QA0DAnD,kBAAmB,QAGrBsC,IAAK/C,EAAa,CAChBG,cA1DqB,CACvBuC,OAAQ,YACR1D,MAAO,2BACP2D,YAAa,kCACbC,KAAM,gEAuDJxC,kBAAmB,OACnBI,cAtDqB,CACvBkC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDkB,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,SAqDjDnD,kBAAmB,QAGrBuC,UAAWhD,EAAa,CACtBG,cAtD2B,CAC7BuC,OAAQ,6DACRkB,IAAK,kFAqDHxD,kBAAmB,MACnBI,cApD2B,CAC7BoD,IAAK,CACHX,GAAI,MACJC,GAAI,MACJC,SAAU,OACVC,KAAM,OACNC,QAAS,WACTC,UAAW,aACXC,QAAS,WACTC,MAAO,WA4CP/C,kBAAmB,SF5GrBlC,QAAS,CACPuF,aAAc,EACdC,sBAAuB,IGvB3B,IAAIC,EAAiB,CAAC,EAEf,SAASC,IACd,OAAOD,CACT,CCiDuBE,KAAKC,IAAI,GAAI,GA/B7B,MAsDMC,EAAqB,OAOrBC,EAAoB,MC7D1B,SAASC,EAAWxH,GACzB,MAAMC,EAAQP,EAAOM,GAErB,OADAC,EAAMwH,SAAS,EAAG,EAAG,EAAG,GACjBxH,CACT,CCfO,SAASyH,EAAgC1H,GAC9C,MAAM2H,EAAU,IAAItI,KAClBA,KAAKuI,IACH5H,EAAK6H,cACL7H,EAAK8H,WACL9H,EAAK+H,UACL/H,EAAKgI,WACLhI,EAAKiI,aACLjI,EAAKkI,aACLlI,EAAKmI,oBAIT,OADAR,EAAQS,eAAepI,EAAK6H,eACrB7H,EAAKqI,UAAYV,EAAQU,SAClC,CCWO,SAASC,EAAyBC,EAAUC,GACjD,MAAMC,EAAiBjB,EAAWe,GAC5BG,EAAkBlB,EAAWgB,GAE7BG,EACJF,EAAeJ,UAAYX,EAAgCe,GACvDG,EACJF,EAAgBL,UAChBX,EAAgCgB,GAKlC,OAAOtB,KAAKyB,OAAOF,EAAgBC,GAAkBrB,EACvD,CCtBO,SAASuB,EAAc9I,EAAMZ,GAClC,OAAIY,aAAgBX,KACX,IAAIW,EAAKH,YAAYT,GAErB,IAAIC,KAAKD,EAEpB,CCXO,SAAS2J,EAAY/I,GAC1B,MAAMgJ,EAAYtJ,EAAOM,GACnBC,EAAQ6I,EAAc9I,EAAM,GAGlC,OAFAC,EAAMgJ,YAAYD,EAAUnB,cAAe,EAAG,GAC9C5H,EAAMwH,SAAS,EAAG,EAAG,EAAG,GACjBxH,CACT,CCNO,SAASiJ,EAAalJ,GAC3B,MAAMC,EAAQP,EAAOM,GAGrB,OAFasI,EAAyBrI,EAAO8I,EAAY9I,IAChC,CAE3B,CCKO,SAASkJ,EAAYnJ,EAAMyB,GAChC,MAAMyF,EAAiBC,IACjBH,EACJvF,GAASuF,cACTvF,GAAS2H,QAAQ3H,SAASuF,cAC1BE,EAAeF,cACfE,EAAekC,QAAQ3H,SAASuF,cAChC,EAEI/G,EAAQP,EAAOM,GACfiG,EAAMhG,EAAMoJ,SACZC,GAAQrD,EAAMe,EAAe,EAAI,GAAKf,EAAMe,EAIlD,OAFA/G,EAAMsJ,QAAQtJ,EAAM8H,UAAYuB,GAChCrJ,EAAMwH,SAAS,EAAG,EAAG,EAAG,GACjBxH,CACT,CCzBO,SAASuJ,EAAexJ,GAC7B,OAAOmJ,EAAYnJ,EAAM,CAAEgH,aAAc,GAC3C,CCAO,SAASyC,EAAezJ,GAC7B,MAAMC,EAAQP,EAAOM,GACf0J,EAAOzJ,EAAM4H,cAEb8B,EAA4Bb,EAAc9I,EAAM,GACtD2J,EAA0BV,YAAYS,EAAO,EAAG,EAAG,GACnDC,EAA0BlC,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMmC,EAAkBJ,EAAeG,GAEjCE,EAA4Bf,EAAc9I,EAAM,GACtD6J,EAA0BZ,YAAYS,EAAM,EAAG,GAC/CG,EAA0BpC,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMqC,EAAkBN,EAAeK,GAEvC,OAAI5J,EAAMoI,WAAauB,EAAgBvB,UAC9BqB,EAAO,EACLzJ,EAAMoI,WAAayB,EAAgBzB,UACrCqB,EAEAA,EAAO,CAElB,CCpBO,SAASK,EAAmB/J,GACjC,MAAM0J,EAAOD,EAAezJ,GACtBgK,EAAkBlB,EAAc9I,EAAM,GAG5C,OAFAgK,EAAgBf,YAAYS,EAAM,EAAG,GACrCM,EAAgBvC,SAAS,EAAG,EAAG,EAAG,GAC3B+B,EAAeQ,EACxB,CCPO,SAASC,EAAWjK,GACzB,MAAMC,EAAQP,EAAOM,GACfsJ,EACJE,EAAevJ,GAAOoI,UAAY0B,EAAmB9J,GAAOoI,UAK9D,OAAOjB,KAAKyB,MAAMS,EAAOhC,GAAsB,CACjD,CCUO,SAAS4C,EAAYlK,EAAMyB,GAChC,MAAMxB,EAAQP,EAAOM,GACf0J,EAAOzJ,EAAM4H,cAEbX,EAAiBC,IACjBF,EACJxF,GAASwF,uBACTxF,GAAS2H,QAAQ3H,SAASwF,uBAC1BC,EAAeD,uBACfC,EAAekC,QAAQ3H,SAASwF,uBAChC,EAEIkD,EAAsBrB,EAAc9I,EAAM,GAChDmK,EAAoBlB,YAAYS,EAAO,EAAG,EAAGzC,GAC7CkD,EAAoB1C,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMmC,EAAkBT,EAAYgB,EAAqB1I,GAEnD2I,EAAsBtB,EAAc9I,EAAM,GAChDoK,EAAoBnB,YAAYS,EAAM,EAAGzC,GACzCmD,EAAoB3C,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMqC,EAAkBX,EAAYiB,EAAqB3I,GAEzD,OAAIxB,EAAMoI,WAAauB,EAAgBvB,UAC9BqB,EAAO,EACLzJ,EAAMoI,WAAayB,EAAgBzB,UACrCqB,EAEAA,EAAO,CAElB,CC7BO,SAASW,EAAgBrK,EAAMyB,GACpC,MAAMyF,EAAiBC,IACjBF,EACJxF,GAASwF,uBACTxF,GAAS2H,QAAQ3H,SAASwF,uBAC1BC,EAAeD,uBACfC,EAAekC,QAAQ3H,SAASwF,uBAChC,EAEIyC,EAAOQ,EAAYlK,EAAMyB,GACzB6I,EAAYxB,EAAc9I,EAAM,GACtCsK,EAAUrB,YAAYS,EAAM,EAAGzC,GAC/BqD,EAAU7C,SAAS,EAAG,EAAG,EAAG,GAE5B,OADc0B,EAAYmB,EAAW7I,EAEvC,CCdO,SAAS8I,EAAQvK,EAAMyB,GAC5B,MAAMxB,EAAQP,EAAOM,GACfsJ,EACJH,EAAYlJ,EAAOwB,GAAS4G,UAC5BgC,EAAgBpK,EAAOwB,GAAS4G,UAKlC,OAAOjB,KAAKyB,MAAMS,EAAOhC,GAAsB,CACjD,CCxDO,SAASkD,EAAgB/E,EAAQgF,GAGtC,OAFahF,EAAS,EAAI,IAAM,IACjB2B,KAAKsD,IAAIjF,GAAQjG,WAAWmL,SAASF,EAAc,IAEpE,CCWO,MAAMG,EAAkB,CAE7B,CAAAC,CAAE7K,EAAM6E,GAUN,MAAMiG,EAAa9K,EAAK6H,cAElB6B,EAAOoB,EAAa,EAAIA,EAAa,EAAIA,EAC/C,OAAON,EAA0B,OAAV3F,EAAiB6E,EAAO,IAAMA,EAAM7E,EAAMrH,OACnE,EAGA,CAAAuN,CAAE/K,EAAM6E,GACN,MAAMmB,EAAQhG,EAAK8H,WACnB,MAAiB,MAAVjD,EAAgBlD,OAAOqE,EAAQ,GAAKwE,EAAgBxE,EAAQ,EAAG,EACxE,EAGAgF,EAAC,CAAChL,EAAM6E,IACC2F,EAAgBxK,EAAK+H,UAAWlD,EAAMrH,QAI/C,CAAAyN,CAAEjL,EAAM6E,GACN,MAAMqG,EAAqBlL,EAAKgI,WAAa,IAAM,EAAI,KAAO,KAE9D,OAAQnD,GACN,IAAK,IACL,IAAK,KACH,OAAOqG,EAAmBC,cAC5B,IAAK,MACH,OAAOD,EACT,IAAK,QACH,OAAOA,EAAmB,GAE5B,QACE,MAA8B,OAAvBA,EAA8B,OAAS,OAEpD,EAGAE,EAAC,CAACpL,EAAM6E,IACC2F,EAAgBxK,EAAKgI,WAAa,IAAM,GAAInD,EAAMrH,QAI3D6N,EAAC,CAACrL,EAAM6E,IACC2F,EAAgBxK,EAAKgI,WAAYnD,EAAMrH,QAIhD8N,EAAC,CAACtL,EAAM6E,IACC2F,EAAgBxK,EAAKiI,aAAcpD,EAAMrH,QAIlD+N,EAAC,CAACvL,EAAM6E,IACC2F,EAAgBxK,EAAKkI,aAAcrD,EAAMrH,QAIlD,CAAAgO,CAAExL,EAAM6E,GACN,MAAM4G,EAAiB5G,EAAMrH,OACvBkO,EAAe1L,EAAKmI,kBAI1B,OAAOqC,EAHmBpD,KAAKuE,MAC7BD,EAAetE,KAAKC,IAAI,GAAIoE,EAAiB,IAEL5G,EAAMrH,OAClD,GClFIoO,EAGM,WAHNA,EAIE,OAJFA,EAKK,UALLA,EAMO,YANPA,EAOK,UAPLA,EAQG,QAiDIC,EAAa,CAExBC,EAAG,SAAU9L,EAAM6E,EAAOS,GACxB,MAAMK,EAAM3F,EAAK6H,cAAgB,EAAI,EAAI,EACzC,OAAQhD,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOS,EAASK,IAAIA,EAAK,CAAEjE,MAAO,gBAEpC,IAAK,QACH,OAAO4D,EAASK,IAAIA,EAAK,CAAEjE,MAAO,WAGpC,QACE,OAAO4D,EAASK,IAAIA,EAAK,CAAEjE,MAAO,SAExC,EAGAmJ,EAAG,SAAU7K,EAAM6E,EAAOS,GAExB,GAAc,OAAVT,EAAgB,CAClB,MAAMiG,EAAa9K,EAAK6H,cAElB6B,EAAOoB,EAAa,EAAIA,EAAa,EAAIA,EAC/C,OAAOxF,EAASC,cAAcmE,EAAM,CAAEqC,KAAM,QAC9C,CAEA,OAAOnB,EAAgBC,EAAE7K,EAAM6E,EACjC,EAGAmH,EAAG,SAAUhM,EAAM6E,EAAOS,EAAU7D,GAClC,MAAMwK,EAAiB/B,EAAYlK,EAAMyB,GAEnCyK,EAAWD,EAAiB,EAAIA,EAAiB,EAAIA,EAG3D,GAAc,OAAVpH,EAAgB,CAElB,OAAO2F,EADc0B,EAAW,IACK,EACvC,CAGA,MAAc,OAAVrH,EACKS,EAASC,cAAc2G,EAAU,CAAEH,KAAM,SAI3CvB,EAAgB0B,EAAUrH,EAAMrH,OACzC,EAGA2O,EAAG,SAAUnM,EAAM6E,GAIjB,OAAO2F,EAHaf,EAAezJ,GAGC6E,EAAMrH,OAC5C,EAWA4O,EAAG,SAAUpM,EAAM6E,GAEjB,OAAO2F,EADMxK,EAAK6H,cACWhD,EAAMrH,OACrC,EAGA6O,EAAG,SAAUrM,EAAM6E,EAAOS,GACxB,MAAMS,EAAUqB,KAAKkF,MAAMtM,EAAK8H,WAAa,GAAK,GAClD,OAAQjD,GAEN,IAAK,IACH,OAAOlD,OAAOoE,GAEhB,IAAK,KACH,OAAOyE,EAAgBzE,EAAS,GAElC,IAAK,KACH,OAAOT,EAASC,cAAcQ,EAAS,CAAEgG,KAAM,YAEjD,IAAK,MACH,OAAOzG,EAASS,QAAQA,EAAS,CAC/BrE,MAAO,cACPmB,QAAS,eAGb,IAAK,QACH,OAAOyC,EAASS,QAAQA,EAAS,CAC/BrE,MAAO,SACPmB,QAAS,eAIb,QACE,OAAOyC,EAASS,QAAQA,EAAS,CAC/BrE,MAAO,OACPmB,QAAS,eAGjB,EAGA0J,EAAG,SAAUvM,EAAM6E,EAAOS,GACxB,MAAMS,EAAUqB,KAAKkF,MAAMtM,EAAK8H,WAAa,GAAK,GAClD,OAAQjD,GAEN,IAAK,IACH,OAAOlD,OAAOoE,GAEhB,IAAK,KACH,OAAOyE,EAAgBzE,EAAS,GAElC,IAAK,KACH,OAAOT,EAASC,cAAcQ,EAAS,CAAEgG,KAAM,YAEjD,IAAK,MACH,OAAOzG,EAASS,QAAQA,EAAS,CAC/BrE,MAAO,cACPmB,QAAS,eAGb,IAAK,QACH,OAAOyC,EAASS,QAAQA,EAAS,CAC/BrE,MAAO,SACPmB,QAAS,eAIb,QACE,OAAOyC,EAASS,QAAQA,EAAS,CAC/BrE,MAAO,OACPmB,QAAS,eAGjB,EAGAkI,EAAG,SAAU/K,EAAM6E,EAAOS,GACxB,MAAMU,EAAQhG,EAAK8H,WACnB,OAAQjD,GACN,IAAK,IACL,IAAK,KACH,OAAO+F,EAAgBG,EAAE/K,EAAM6E,GAEjC,IAAK,KACH,OAAOS,EAASC,cAAcS,EAAQ,EAAG,CAAE+F,KAAM,UAEnD,IAAK,MACH,OAAOzG,EAASU,MAAMA,EAAO,CAC3BtE,MAAO,cACPmB,QAAS,eAGb,IAAK,QACH,OAAOyC,EAASU,MAAMA,EAAO,CAC3BtE,MAAO,SACPmB,QAAS,eAIb,QACE,OAAOyC,EAASU,MAAMA,EAAO,CAAEtE,MAAO,OAAQmB,QAAS,eAE7D,EAGA2J,EAAG,SAAUxM,EAAM6E,EAAOS,GACxB,MAAMU,EAAQhG,EAAK8H,WACnB,OAAQjD,GAEN,IAAK,IACH,OAAOlD,OAAOqE,EAAQ,GAExB,IAAK,KACH,OAAOwE,EAAgBxE,EAAQ,EAAG,GAEpC,IAAK,KACH,OAAOV,EAASC,cAAcS,EAAQ,EAAG,CAAE+F,KAAM,UAEnD,IAAK,MACH,OAAOzG,EAASU,MAAMA,EAAO,CAC3BtE,MAAO,cACPmB,QAAS,eAGb,IAAK,QACH,OAAOyC,EAASU,MAAMA,EAAO,CAC3BtE,MAAO,SACPmB,QAAS,eAIb,QACE,OAAOyC,EAASU,MAAMA,EAAO,CAAEtE,MAAO,OAAQmB,QAAS,eAE7D,EAGA4J,EAAG,SAAUzM,EAAM6E,EAAOS,EAAU7D,GAClC,MAAMiL,EAAOnC,EAAQvK,EAAMyB,GAE3B,MAAc,OAAVoD,EACKS,EAASC,cAAcmH,EAAM,CAAEX,KAAM,SAGvCvB,EAAgBkC,EAAM7H,EAAMrH,OACrC,EAGAmP,EAAG,SAAU3M,EAAM6E,EAAOS,GACxB,MAAMsH,EAAU3C,EAAWjK,GAE3B,MAAc,OAAV6E,EACKS,EAASC,cAAcqH,EAAS,CAAEb,KAAM,SAG1CvB,EAAgBoC,EAAS/H,EAAMrH,OACxC,EAGAwN,EAAG,SAAUhL,EAAM6E,EAAOS,GACxB,MAAc,OAAVT,EACKS,EAASC,cAAcvF,EAAK+H,UAAW,CAAEgE,KAAM,SAGjDnB,EAAgBI,EAAEhL,EAAM6E,EACjC,EAGAgI,EAAG,SAAU7M,EAAM6E,EAAOS,GACxB,MAAMwH,EAAY5D,EAAalJ,GAE/B,MAAc,OAAV6E,EACKS,EAASC,cAAcuH,EAAW,CAAEf,KAAM,cAG5CvB,EAAgBsC,EAAWjI,EAAMrH,OAC1C,EAGAuP,EAAG,SAAU/M,EAAM6E,EAAOS,GACxB,MAAM0H,EAAYhN,EAAKqJ,SACvB,OAAQxE,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOS,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,cACPmB,QAAS,eAGb,IAAK,QACH,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,SACPmB,QAAS,eAGb,IAAK,SACH,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,QACPmB,QAAS,eAIb,QACE,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,OACPmB,QAAS,eAGjB,EAGA/F,EAAG,SAAUkD,EAAM6E,EAAOS,EAAU7D,GAClC,MAAMuL,EAAYhN,EAAKqJ,SACjB4D,GAAkBD,EAAYvL,EAAQuF,aAAe,GAAK,GAAK,EACrE,OAAQnC,GAEN,IAAK,IACH,OAAOlD,OAAOsL,GAEhB,IAAK,KACH,OAAOzC,EAAgByC,EAAgB,GAEzC,IAAK,KACH,OAAO3H,EAASC,cAAc0H,EAAgB,CAAElB,KAAM,QACxD,IAAK,MACH,OAAOzG,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,cACPmB,QAAS,eAGb,IAAK,QACH,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,SACPmB,QAAS,eAGb,IAAK,SACH,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,QACPmB,QAAS,eAIb,QACE,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,OACPmB,QAAS,eAGjB,EAGAqK,EAAG,SAAUlN,EAAM6E,EAAOS,EAAU7D,GAClC,MAAMuL,EAAYhN,EAAKqJ,SACjB4D,GAAkBD,EAAYvL,EAAQuF,aAAe,GAAK,GAAK,EACrE,OAAQnC,GAEN,IAAK,IACH,OAAOlD,OAAOsL,GAEhB,IAAK,KACH,OAAOzC,EAAgByC,EAAgBpI,EAAMrH,QAE/C,IAAK,KACH,OAAO8H,EAASC,cAAc0H,EAAgB,CAAElB,KAAM,QACxD,IAAK,MACH,OAAOzG,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,cACPmB,QAAS,eAGb,IAAK,QACH,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,SACPmB,QAAS,eAGb,IAAK,SACH,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,QACPmB,QAAS,eAIb,QACE,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,OACPmB,QAAS,eAGjB,EAGApF,EAAG,SAAUuC,EAAM6E,EAAOS,GACxB,MAAM0H,EAAYhN,EAAKqJ,SACjB8D,EAA6B,IAAdH,EAAkB,EAAIA,EAC3C,OAAQnI,GAEN,IAAK,IACH,OAAOlD,OAAOwL,GAEhB,IAAK,KACH,OAAO3C,EAAgB2C,EAActI,EAAMrH,QAE7C,IAAK,KACH,OAAO8H,EAASC,cAAc4H,EAAc,CAAEpB,KAAM,QAEtD,IAAK,MACH,OAAOzG,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,cACPmB,QAAS,eAGb,IAAK,QACH,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,SACPmB,QAAS,eAGb,IAAK,SACH,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,QACPmB,QAAS,eAIb,QACE,OAAOyC,EAASW,IAAI+G,EAAW,CAC7BtL,MAAO,OACPmB,QAAS,eAGjB,EAGAoI,EAAG,SAAUjL,EAAM6E,EAAOS,GACxB,MACM4F,EADQlL,EAAKgI,WACgB,IAAM,EAAI,KAAO,KAEpD,OAAQnD,GACN,IAAK,IACL,IAAK,KACH,OAAOS,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,cACPmB,QAAS,eAEb,IAAK,MACH,OAAOyC,EACJY,UAAUgF,EAAoB,CAC7BxJ,MAAO,cACPmB,QAAS,eAEVuK,cACL,IAAK,QACH,OAAO9H,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,SACPmB,QAAS,eAGb,QACE,OAAOyC,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,OACPmB,QAAS,eAGjB,EAGAwK,EAAG,SAAUrN,EAAM6E,EAAOS,GACxB,MAAMgI,EAAQtN,EAAKgI,WACnB,IAAIkD,EASJ,OAPEA,EADY,KAAVoC,EACmB1B,EACF,IAAV0B,EACY1B,EAEA0B,EAAQ,IAAM,EAAI,KAAO,KAGxCzI,GACN,IAAK,IACL,IAAK,KACH,OAAOS,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,cACPmB,QAAS,eAEb,IAAK,MACH,OAAOyC,EACJY,UAAUgF,EAAoB,CAC7BxJ,MAAO,cACPmB,QAAS,eAEVuK,cACL,IAAK,QACH,OAAO9H,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,SACPmB,QAAS,eAGb,QACE,OAAOyC,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,OACPmB,QAAS,eAGjB,EAGA0K,EAAG,SAAUvN,EAAM6E,EAAOS,GACxB,MAAMgI,EAAQtN,EAAKgI,WACnB,IAAIkD,EAWJ,OATEA,EADEoC,GAAS,GACU1B,EACZ0B,GAAS,GACG1B,EACZ0B,GAAS,EACG1B,EAEAA,EAGf/G,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOS,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,cACPmB,QAAS,eAEb,IAAK,QACH,OAAOyC,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,SACPmB,QAAS,eAGb,QACE,OAAOyC,EAASY,UAAUgF,EAAoB,CAC5CxJ,MAAO,OACPmB,QAAS,eAGjB,EAGAuI,EAAG,SAAUpL,EAAM6E,EAAOS,GACxB,GAAc,OAAVT,EAAgB,CAClB,IAAIyI,EAAQtN,EAAKgI,WAAa,GAE9B,OADc,IAAVsF,IAAaA,EAAQ,IAClBhI,EAASC,cAAc+H,EAAO,CAAEvB,KAAM,QAC/C,CAEA,OAAOnB,EAAgBQ,EAAEpL,EAAM6E,EACjC,EAGAwG,EAAG,SAAUrL,EAAM6E,EAAOS,GACxB,MAAc,OAAVT,EACKS,EAASC,cAAcvF,EAAKgI,WAAY,CAAE+D,KAAM,SAGlDnB,EAAgBS,EAAErL,EAAM6E,EACjC,EAGA2I,EAAG,SAAUxN,EAAM6E,EAAOS,GACxB,MAAMgI,EAAQtN,EAAKgI,WAAa,GAEhC,MAAc,OAAVnD,EACKS,EAASC,cAAc+H,EAAO,CAAEvB,KAAM,SAGxCvB,EAAgB8C,EAAOzI,EAAMrH,OACtC,EAGAiQ,EAAG,SAAUzN,EAAM6E,EAAOS,GACxB,IAAIgI,EAAQtN,EAAKgI,WAGjB,OAFc,IAAVsF,IAAaA,EAAQ,IAEX,OAAVzI,EACKS,EAASC,cAAc+H,EAAO,CAAEvB,KAAM,SAGxCvB,EAAgB8C,EAAOzI,EAAMrH,OACtC,EAGA8N,EAAG,SAAUtL,EAAM6E,EAAOS,GACxB,MAAc,OAAVT,EACKS,EAASC,cAAcvF,EAAKiI,aAAc,CAAE8D,KAAM,WAGpDnB,EAAgBU,EAAEtL,EAAM6E,EACjC,EAGA0G,EAAG,SAAUvL,EAAM6E,EAAOS,GACxB,MAAc,OAAVT,EACKS,EAASC,cAAcvF,EAAKkI,aAAc,CAAE6D,KAAM,WAGpDnB,EAAgBW,EAAEvL,EAAM6E,EACjC,EAGA2G,EAAG,SAAUxL,EAAM6E,GACjB,OAAO+F,EAAgBY,EAAExL,EAAM6E,EACjC,EAGA6I,EAAG,SAAU1N,EAAM6E,EAAO8I,EAAWlM,GACnC,MACMmM,GADenM,EAAQoM,eAAiB7N,GACV8N,oBAEpC,GAAuB,IAAnBF,EACF,MAAO,IAGT,OAAQ/I,GAEN,IAAK,IACH,OAAOkJ,EAAkCH,GAK3C,IAAK,OACL,IAAK,KACH,OAAOI,EAAeJ,GAOxB,QACE,OAAOI,EAAeJ,EAAgB,KAE5C,EAGAK,EAAG,SAAUjO,EAAM6E,EAAO8I,EAAWlM,GACnC,MACMmM,GADenM,EAAQoM,eAAiB7N,GACV8N,oBAEpC,OAAQjJ,GAEN,IAAK,IACH,OAAOkJ,EAAkCH,GAK3C,IAAK,OACL,IAAK,KACH,OAAOI,EAAeJ,GAOxB,QACE,OAAOI,EAAeJ,EAAgB,KAE5C,EAGAM,EAAG,SAAUlO,EAAM6E,EAAO8I,EAAWlM,GACnC,MACMmM,GADenM,EAAQoM,eAAiB7N,GACV8N,oBAEpC,OAAQjJ,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQsJ,EAAoBP,EAAgB,KAGrD,QACE,MAAO,MAAQI,EAAeJ,EAAgB,KAEpD,EAGAQ,EAAG,SAAUpO,EAAM6E,EAAO8I,EAAWlM,GACnC,MACMmM,GADenM,EAAQoM,eAAiB7N,GACV8N,oBAEpC,OAAQjJ,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQsJ,EAAoBP,EAAgB,KAGrD,QACE,MAAO,MAAQI,EAAeJ,EAAgB,KAEpD,EAGAS,EAAG,SAAUrO,EAAM6E,EAAO8I,EAAWlM,GACnC,MAAM6M,EAAe7M,EAAQoM,eAAiB7N,EAE9C,OAAOwK,EADWpD,KAAKuE,MAAM2C,EAAajG,UAAY,KACpBxD,EAAMrH,OAC1C,EAGA+Q,EAAG,SAAUvO,EAAM6E,EAAO8I,EAAWlM,GAGnC,OAAO+I,GAFc/I,EAAQoM,eAAiB7N,GACfqI,UACGxD,EAAMrH,OAC1C,GAGF,SAAS2Q,EAAoBK,EAAQC,EAAY,IAC/C,MAAMC,EAAOF,EAAS,EAAI,IAAM,IAC1BG,EAAYvH,KAAKsD,IAAI8D,GACrBlB,EAAQlG,KAAKuE,MAAMgD,EAAY,IAC/BC,EAAUD,EAAY,GAC5B,OAAgB,IAAZC,EACKF,EAAO/M,OAAO2L,GAEhBoB,EAAO/M,OAAO2L,GAASmB,EAAYjE,EAAgBoE,EAAS,EACrE,CAEA,SAASb,EAAkCS,EAAQC,GACjD,GAAID,EAAS,IAAO,EAAG,CAErB,OADaA,EAAS,EAAI,IAAM,KAClBhE,EAAgBpD,KAAKsD,IAAI8D,GAAU,GAAI,EACvD,CACA,OAAOR,EAAeQ,EAAQC,EAChC,CAEA,SAAST,EAAeQ,EAAQC,EAAY,IAC1C,MAAMC,EAAOF,EAAS,EAAI,IAAM,IAC1BG,EAAYvH,KAAKsD,IAAI8D,GAG3B,OAAOE,EAFOlE,EAAgBpD,KAAKuE,MAAMgD,EAAY,IAAK,GAEpCF,EADNjE,EAAgBmE,EAAY,GAAI,EAElD,CC7wBA,MAAME,EAAoB,CAAC3K,EAASpC,KAClC,OAAQoC,GACN,IAAK,IACH,OAAOpC,EAAW9B,KAAK,CAAE0B,MAAO,UAClC,IAAK,KACH,OAAOI,EAAW9B,KAAK,CAAE0B,MAAO,WAClC,IAAK,MACH,OAAOI,EAAW9B,KAAK,CAAE0B,MAAO,SAElC,QACE,OAAOI,EAAW9B,KAAK,CAAE0B,MAAO,SACpC,EAGIoN,EAAoB,CAAC5K,EAASpC,KAClC,OAAQoC,GACN,IAAK,IACH,OAAOpC,EAAWK,KAAK,CAAET,MAAO,UAClC,IAAK,KACH,OAAOI,EAAWK,KAAK,CAAET,MAAO,WAClC,IAAK,MACH,OAAOI,EAAWK,KAAK,CAAET,MAAO,SAElC,QACE,OAAOI,EAAWK,KAAK,CAAET,MAAO,SACpC,EAmCWqN,EAAiB,CAC5BnR,EAAGkR,EACHE,EAlC4B,CAAC9K,EAASpC,KACtC,MAAMyB,EAAcW,EAAQV,MAAM,cAAgB,GAC5CyL,EAAc1L,EAAY,GAC1B2L,EAAc3L,EAAY,GAEhC,IAAK2L,EACH,OAAOL,EAAkB3K,EAASpC,GAGpC,IAAIqN,EAEJ,OAAQF,GACN,IAAK,IACHE,EAAiBrN,EAAWM,SAAS,CAAEV,MAAO,UAC9C,MACF,IAAK,KACHyN,EAAiBrN,EAAWM,SAAS,CAAEV,MAAO,WAC9C,MACF,IAAK,MACHyN,EAAiBrN,EAAWM,SAAS,CAAEV,MAAO,SAC9C,MAEF,QACEyN,EAAiBrN,EAAWM,SAAS,CAAEV,MAAO,SAIlD,OAAOyN,EACJxR,QAAQ,WAAYkR,EAAkBI,EAAanN,IACnDnE,QAAQ,WAAYmR,EAAkBI,EAAapN,GAAY,GCzD9DsN,GAAmB,OACnBC,GAAkB,OAElBC,GAAc,CAAC,IAAK,KAAM,KAAM,QAU/B,SAASC,GAA0B1K,EAAO2K,EAAQC,GACvD,MAAMC,EAKR,SAAiB7K,EAAO2K,EAAQC,GAC9B,MAAME,EAAuB,MAAb9K,EAAM,GAAa,QAAU,oBAC7C,MAAO,SAASA,EAAMuI,gCAAgCvI,aAAiB2K,uBAA4BG,oBAA0BF,kFAC/H,CARmBG,CAAQ/K,EAAO2K,EAAQC,GAExC,GADAI,QAAQC,KAAKJ,GACTJ,GAAYS,SAASlL,GAAQ,MAAM,IAAImL,WAAWN,EACxD,CCUA,MAAMO,GACJ,wDAIIC,GAA6B,oCAE7BC,GAAsB,eACtBC,GAAoB,MACpBC,GAAgC,WAmS/B,SAASb,GAAOxP,EAAMsQ,EAAW7O,GACtC,MAAMyF,EAAiBC,IACjBiC,EAAS3H,GAAS2H,QAAUlC,EAAekC,QAAU,EAErDnC,EACJxF,GAASwF,uBACTxF,GAAS2H,QAAQ3H,SAASwF,uBAC1BC,EAAeD,uBACfC,EAAekC,QAAQ3H,SAASwF,uBAChC,EAEID,EACJvF,GAASuF,cACTvF,GAAS2H,QAAQ3H,SAASuF,cAC1BE,EAAeF,cACfE,EAAekC,QAAQ3H,SAASuF,cAChC,EAEIsH,EAAe5O,EAAOM,GAE5B,IAAKD,EAAQuO,GACX,MAAM,IAAI0B,WAAW,sBAGvB,MAAMO,EAAmB,CACvBtJ,sBAAuBA,EACvBD,aAAcA,EACdoC,OAAQA,EACRyE,cAAeS,GA4DjB,OAzDegC,EACZ9M,MAAM0M,IACNM,KAAI,SAAUC,GACb,MAAMC,EAAiBD,EAAU,GACjC,GAAuB,MAAnBC,GAA6C,MAAnBA,EAAwB,CAEpD,OAAOC,EADe5B,EAAe2B,IAChBD,EAAWrH,EAAOtH,WACzC,CACA,OAAO2O,CACT,IACCG,KAAK,IACLpN,MAAMyM,IACNO,KAAI,SAAUC,GAEb,GAAkB,OAAdA,EACF,MAAO,IAGT,MAAMC,EAAiBD,EAAU,GACjC,GAAuB,MAAnBC,EACF,OAwCR,SAA4BjB,GAC1B,MAAMoB,EAAUpB,EAAMjM,MAAM2M,IAE5B,IAAKU,EACH,OAAOpB,EAGT,OAAOoB,EAAQ,GAAGlT,QAAQyS,GAAmB,IAC/C,CAhDeU,CAAmBL,GAG5B,MAAMM,EAAYlF,EAAW6E,GAC7B,GAAIK,EAaF,OAXGtP,GAASuP,8BDvXqBnM,ECwXN4L,EDvX1BpB,GAAgBlL,KAAKU,KCyXpB0K,GAA0BkB,EAAWH,EAAW3O,OAAO3B,KAGtDyB,GAASwP,8BDjYb,SAAmCpM,GACxC,OAAOuK,GAAiBjL,KAAKU,EAC/B,CCgYUqM,CAA0BT,IAE1BlB,GAA0BkB,EAAWH,EAAW3O,OAAO3B,IAElD+Q,EACLzC,EACAmC,EACArH,EAAO9D,SACPiL,GDtYH,IAAkC1L,EC0YnC,GAAI6L,EAAelN,MAAM6M,IACvB,MAAM,IAAIL,WACR,iEACEU,EACA,KAIN,OAAOD,CACT,IACCG,KAAK,GAGV,CAaA,MCxaA,GAJuB9T,IACrBA,EAAEkC,OAAOmS,aAAa,MAAO3B,GAAO,IAAInQ,KAAQ,oBAAoB,ECIpE,GANc,SAAU+R,GACtBxU,KAAKyU,GAAKC,KAAKC,OAAOC,aACtB5U,KAAKwU,KAAOA,EACZxU,KAAK6U,MAAQ,EACf,ECCF,GALgC,IACfC,KAAKC,MAAMC,aAAaC,QAAQ,aCGjD,GAJ4BC,GACnBF,aAAaG,QAAQ,WAAYL,KAAKM,UAAUF,ICczD,GAX0B,KAExB,GAAkC,OAA9B,KAAoC,CACtC,GAAmB,IACnB,MAAMG,EAAiB,IAAI,GAAQ,SAC7BC,EAAS,KACfA,EAAOC,KAAKF,GACZ,GAAmBC,EACrB,GCyBF,GArC4BE,IAC1B,MAAMrT,EAAc5B,SAASW,cAAc,iBACrCuU,EAAUlV,SAASmV,cAAc,UACjCC,EAAapV,SAASmV,cAAc,QACpCE,EAAcrV,SAASmV,cAAc,QACrCG,EAAetV,SAASmV,cAAc,QACtCI,EAAUvV,SAASmV,cAAc,QACjCK,EAAcxV,SAASW,cAAc,iBACrC8U,EAASzV,SAASmV,cAAc,UACtCM,EAAOzB,aAAa,QAASiB,EAAQhB,MACrCwB,EAAOxU,YAAcgU,EAAQhB,KAC7BiB,EAAQhU,UAAUG,IAAI,gBACtB6T,EAAQlB,aAAa,KAAMiB,EAAQf,IACnCkB,EAAWlU,UAAUG,IACnB,2BACA,eACA,eAEF+T,EAAWnU,YAAc,SACzBoU,EAAYnU,UAAUG,IAAI,eAC1BgU,EAAYpU,YAAcgU,EAAQhB,KAClCqB,EAAatB,aAAa,KAAM,mBAChCsB,EAAapU,UAAUG,IACrB,2BACA,eACA,eAEFiU,EAAarU,YAAc,SAC3BsU,EAAQrU,UAAUG,IAAI,WACtB6T,EAAQQ,YAAYN,GACpBF,EAAQQ,YAAYL,GACpBH,EAAQQ,YAAYJ,GACpBJ,EAAQQ,YAAYH,GACpB3T,EAAY8T,YAAYR,GACxBM,EAAYE,YAAYD,EAAO,ECfjC,GAdmB,KACjB,MAAME,EAAiB3V,SAASW,cAAc,qBACxCsT,EAAOjU,SAASW,cAAc,SAEpCgV,EAAejU,iBAAiB,UAAU,KACxC,MAAMkU,EAAa,IAAI,GAAQ3B,EAAKhS,OAC9B8S,EAAS,KACfA,EAAOC,KAAKY,GACZ,GAAmBb,GACnBY,EAAeE,QACf,GAAmBD,EAAW,GAC9B,ECUJ,GAvBuBjW,IACrB,MAAM6V,EAAcxV,SAASW,cAAc,iBAErCoU,EAAS,KACTe,EAAanW,EAAEkC,OAAOkU,QAAQ,iBAC9B7B,EAAK4B,EAAW5B,GACtBa,EAAO1B,KAAI,CAAC2C,EAAIpM,KACd,GAAIoM,EAAG9B,KAAOA,EAAI,CAChBa,EAAOkB,OAAOrM,EAAO,GACrB,GAAmBmL,GACnBe,EAAW1U,SACX,MAAM8U,EAAsB,KAC5BV,EAAYW,UAAY,GACxBD,EAAoB7C,KAAK2C,IACvB,MAAMP,EAASzV,SAASmV,cAAc,UACtCM,EAAOzB,aAAa,QAASgC,EAAG/B,MAChCwB,EAAOxU,YAAc+U,EAAG/B,KACxBuB,EAAYE,YAAYD,EAAO,GAEnC,IACA,ECNJ,GAjBa,SACXW,EACAC,EACAC,EACAC,EACAC,EACAhB,EAAc,SAEd/V,KAAKyU,GAAKC,KAAKC,OAAOC,aACtB5U,KAAK2W,MAAQA,EACb3W,KAAK4W,YAAcA,EACnB5W,KAAK6W,QAAUA,EACf7W,KAAK8W,SAAWA,EAChB9W,KAAK+W,MAAQA,EACb/W,KAAK+V,YAAcA,EACnB/V,KAAKgX,WAAY,CACnB,EC2GA,GAzHkB,CAACC,EAAUC,KAC3BD,EAASrD,KAAKuD,IACZ,MAAMC,EAAW7W,SAASmV,cAAc,OACxC0B,EAAS3V,UAAUG,IAAI,aACvBwV,EAAS7C,aAAa,KAAM4C,EAAK1C,IACjC,MAAM4C,EAAY9W,SAASmV,cAAc,MACzC2B,EAAU7V,YAAc2V,EAAKR,MAC7BU,EAAU5V,UAAUG,IAAI,cACxB,MAAM0V,EAAiB/W,SAASmV,cAAc,KAC9C4B,EAAe7V,UAAUG,IAAI,oBAC7B0V,EAAe9V,YAAc2V,EAAKP,YAClC,MAAMW,EAAchX,SAASmV,cAAc,OAC3C6B,EAAY9V,UAAUG,IAAI,gBAC1B,MAAM4V,EAAcjX,SAASmV,cAAc,QAC3C8B,EAAYhW,YAAc,YAC1B,MAAMqV,EAAUtW,SAASmV,cAAc,QACvCmB,EAAQpV,UAAUG,IAAI,YACtBiV,EAAQrV,YAAc,IAAMoR,GAAOuE,EAAKN,QAAS,mBACjD,MAAMY,EAAelX,SAASmV,cAAc,OACtCgC,EAAenX,SAASmV,cAAc,QACtCoB,EAAWvW,SAASmV,cAAc,QAClCqB,EAAQxW,SAASmV,cAAc,OAC/BiC,EAAapX,SAASmV,cAAc,QACpCkC,EAAOrX,SAASmV,cAAc,KAC9BmC,EAAQtX,SAASmV,cAAc,SAC/B7C,EAAQtS,SAASmV,cAAc,SACrC7C,EAAMiF,KAAO,WACbjF,EAAMkF,QAAUZ,EAAKH,WACH,IAAlBnE,EAAMkF,QACFX,EAAS3V,UAAUG,IAAI,qBACvBwV,EAAS3V,UAAUE,OAAO,sBAEZ,IAAlBkR,EAAMkF,QACFV,EAAU5V,UAAUG,IAAI,sBACxByV,EAAU5V,UAAUE,OAAO,uBACb,IAAlBkR,EAAMkF,QACFT,EAAe7V,UAAUG,IAAI,sBAC7B0V,EAAe7V,UAAUE,OAAO,uBAClB,IAAlBkR,EAAMkF,QACFR,EAAY9V,UAAUG,IAAI,sBAC1B2V,EAAY9V,UAAUE,OAAO,uBACf,IAAlBkR,EAAMkF,QACFN,EAAahW,UAAUG,IAAI,sBAC3B6V,EAAahW,UAAUE,OAAO,uBAEhB,IAAlBkR,EAAMkF,QACFhB,EAAMtV,UAAUG,IAAI,sBACpBmV,EAAMtV,UAAUE,OAAO,sBAE3BkR,EAAMpR,UAAUG,IAAI,aACpBiW,EAAMpW,UAAUG,IAAI,mBACpBiW,EAAMrW,YAAc,YACpBoW,EAAKnW,UAAUG,IAAI,QACnBgW,EAAKpW,YAAc2V,EAAKJ,MACxBY,EAAWlW,UAAUG,IAAI,eACzB+V,EAAWnW,YAAc,SACzBuV,EAAMtV,UAAUG,IAAI,SACpBkV,EAASrV,UAAUG,IAAI,YACvBkV,EAAStV,YAAc,IAAM2V,EAAKL,SAClCY,EAAalW,YAAc,YAC3BiW,EAAahW,UAAUG,IAAI,iBAC3B6V,EAAaxB,YAAYyB,GACzBD,EAAaxB,YAAYa,GACzBS,EAAYtB,YAAYuB,GACxBD,EAAYtB,YAAYY,GACxBE,EAAMd,YAAY0B,GAClBZ,EAAMd,YAAY2B,GAClBC,EAAM5B,YAAYpD,GAClB,MAAMmF,EAAmBzX,SAASmV,cAAc,OAChDsC,EAAiBvW,UAAUG,IAAI,sBAC/B,MAAMqW,EAAc1X,SAASmV,cAAc,QAC3CuC,EAAYxW,UAAUG,IACpB,2BACA,eACA,eAEFqW,EAAYzW,YAAc,UAC1BwW,EAAiB/B,YAAYgC,GAC7B,MAAMC,EAAY3X,SAASmV,cAAc,QACzCwC,EAAUzW,UAAUG,IAAI,cACxBsW,EAAU1W,YAAc,IAAM2V,EAAKpB,YACnCiC,EAAiB/B,YAAYiC,GAC7B,MAAMC,EAAc5X,SAASmV,cAAc,OAC3CyC,EAAY1W,UAAUG,IAAI,gBAC1B,MAAMwW,EAAa7X,SAASmV,cAAc,UACpC2C,EAAW9X,SAASmV,cAAc,QACxC2C,EAAS5W,UAAUG,IACjB,2BACA,YACA,eAEFyW,EAAS7W,YAAc,OACvB4W,EAAW3W,UAAUG,IAAI,eACzBwW,EAAW5W,YAAc,OACzB4W,EAAWnC,YAAYoC,GACvB,MAAMxC,EAAetV,SAASmV,cAAc,UAC5CG,EAAaiC,KAAO,SACpBjC,EAAapU,UAAUG,IAAI,iBAC3BiU,EAAarU,YAAc,SAC3B,MAAM8W,EAAa/X,SAASmV,cAAc,QAC1C4C,EAAW7W,UAAUG,IACnB,2BACA,cACA,eAEF0W,EAAW9W,YAAc,SACzBqU,EAAaI,YAAYqC,GACzBH,EAAYlC,YAAYmC,GACxBD,EAAYlC,YAAYJ,GACxBuB,EAASnB,YAAYoB,GACrBD,EAASnB,YAAYqB,GACrBF,EAASnB,YAAYsB,GACrBH,EAASnB,YAAYwB,GACrBL,EAASnB,YAAYc,GACrBK,EAASnB,YAAY4B,GACrBT,EAASnB,YAAY+B,GACrBZ,EAASnB,YAAYkC,GACrBjB,EAAUjB,YAAYmB,EAAS,GAC/B,EC5GJ,GAT6BmB,IAC3B,MAAMC,EAAiBjY,SAASW,cAAc,oBAC9CsX,EAAe9B,UAAY,GAC3B,MAEM+B,EAFW,KACUC,QAAQC,GAASA,EAAKnE,OAAS+D,IAAM,GACtC1D,MAC1B,GAAU4D,EAASD,EAAe,ECGpC,GAVqB,KACrB,IAAII,EAAkBrY,SAASW,cAAc,iBACzC2X,EAAkBtY,SAASW,cAAc,0BAA0B4X,SAAS,GAE5E5Q,EADW,KACM6Q,MAAKxC,GAAkB,UAAZA,EAAG/B,OAAkBK,MAAMjU,OAE3DgY,EAAgBpX,YAAc0G,EAC9B2Q,EAAgBrX,YAAc0G,CAAK,ECa5B,SAAS8Q,GAAS5V,GACvB,OAAQN,EAAOM,GAAQX,KAAKwW,KAC9B,CAGA,MCdA,GAXoB,KAChB,IAAIC,EAAc3Y,SAASW,cAAc,gBACrCiY,EAAY,GACD,KACNvF,KAAK2C,GAAQ4C,EAAYA,EAAUC,OAAO7C,EAAG1B,SACtD,MAAM4D,EAAUU,EAAUT,QAAQvB,GAChC6B,GAAS,IAAIvW,KAAK0U,EAAKN,YAEzBqC,EAAY1X,YAAciX,EAAQ7X,MAAM,ECsBrC,SAASyY,GAAU1N,EAAUC,GAIlC,OAH2BhB,EAAWe,KACVf,EAAWgB,EAGzC,CCfO,SAAS0N,GAAQlW,GACtB,OAAOiW,GAAUjW,EAAMX,KAAKwW,MAC9B,CAGA,MCfA,GATqB,KACnB,IAAIM,EAAehZ,SAASW,cAAc,iBACtCsY,EAAa,GACF,KACN5F,KAAK2C,GAAQiD,EAAaA,EAAWJ,OAAO7C,EAAG1B,SACxD,MAAM4D,EAAUe,EAAWd,QAAQvB,GAASmC,GAAQ,IAAI7W,KAAK0U,EAAKN,YAClE0C,EAAa/X,YAAciX,EAAQ7X,MAAM,ECcpC,SAAS6Y,GAAQrW,EAAMsW,GAC5B,MAAMrW,EAAQP,EAAOM,GACrB,OAAIE,MAAMoW,GAAgBxN,EAAc9I,EAAMF,KACzCwW,GAILrW,EAAMsJ,QAAQtJ,EAAM8H,UAAYuO,GACzBrW,GAHEA,CAIX,CCTO,SAASsW,GAAWvW,GACzB,OAAOiW,GAAUjW,EAAMqW,GAAQhX,KAAKwW,MAAO,GAC7C,CAGA,MCdA,GAXwB,KACtB,IAAIW,EAAkBrZ,SAASW,cAAc,oBACzC2Y,EAAgB,GACL,KACNjG,KAAK2C,GAAQsD,EAAgBA,EAAcT,OAAO7C,EAAG1B,SAC9D,MAAM4D,EAAUoB,EAAcnB,QAAQvB,GACpCwC,GAAW,IAAIlX,KAAK0U,EAAKN,YAE3B+C,EAAgBpY,YAAciX,EAAQ7X,MAAM,ECC9C,GAPqB,KACnB,KACA,KACA,KACA,IAAa,ECuCf,GA3CgB,KACd,MAAMkZ,EAAWvZ,SAASW,cAAc,YACxC4Y,EAAS7X,iBAAiB,UAAU,KAClC,MAAM0U,EAAQpW,SAASW,cAAc,UAC/B0V,EAAcrW,SAASW,cAAc,gBACrC2V,EAAUtW,SAASW,cAAc,YACjC4V,EAAWvW,SAASW,cAAc,aAClC6V,EAAQxW,SAASW,cAAc,UAC/B6U,EAAcxV,SAASW,cAAc,iBACrC6Y,EAAU,IAAI,GAClBpD,EAAMnU,MACNoU,EAAYpU,MACZqU,EAAQrU,MACRsU,EAAStU,MACTuU,EAAMvU,MACNuT,EAAYvT,OAERwX,EAAW,KACjBA,EAASpG,KAAK4B,IACRA,EAAQhB,OAASuB,EAAYvT,QAC/BgT,EAAQX,MAAMU,KAAKwE,GACnB,GAAmBC,GACnB,GAAoBxE,EAAQhB,MAE5ByF,YAAW,KACY,UAAjBzE,EAAQhB,MACVjU,SAASW,cAAc,0BAA0BgZ,QAG9B,IAAI3Z,SAAS4Z,iBAAiB,kBACtCzB,QAAQnC,IACfA,EAAGuC,SAAS,GAAGtX,cAAgBgU,EAAQhB,MACzC+B,EAAG2D,OACL,GACA,GACD,GACL,IAEFJ,EAAS1D,QACT,IAAc,GACd,ECpBJ,GApBoBlW,IAClB,MAAM8Z,EAAW,KACXI,EAAoBla,EAAEkC,OAAOkU,QAAQ,cACrCP,EAAcqE,EACjBlZ,cAAc,eACdM,YAAY6Y,OAEf,IAAI5B,EADcuB,EAASjB,MAAMvD,GAAYA,EAAQhB,OAASuB,IACtClB,MACxB,GAAiB,OAAbmF,EAAmB,CACrB,MAAMM,EAAc7B,EAAQpR,WACzB8P,GAASA,EAAK1C,KAAO2F,EAAkB3F,KAG1CgE,EAAQjC,OAAO8D,EAAa,GAC5B,GAAmBN,GACnB,GAAoBjE,EACtB,CACA,IAAc,ECQhB,GA3BgC7V,IAC9B,MAAM8Z,EAAW,KACjB,GAAiB,OAAbA,EAAmB,CACrB,MAAMjE,EAAcxV,SACjBW,cAAc,eACdM,YAAY6Y,OAGTE,EAFYP,EAASjB,MAAMvD,GAAYA,EAAQhB,OAASuB,IACpClB,MACH6D,QACpBvB,GAASA,EAAK1C,KAAOvU,EAAEkC,OAAOoY,cAAcA,cAAc/F,KAC3D,IAEmB,IAArB8F,EAAOvD,UACFuD,EAAOvD,WAAY,EACnBuD,EAAOvD,WAAY,EACxB,GAAmBgD,GAEnB9Z,EAAEkC,OAAOoY,cAAcA,cAAc/Y,UAAUI,OAAO,qBACtD3B,EAAEkC,OAAOoY,cAAcA,cAAc1B,SAAS,GAAGrX,UAAUI,OAAO,sBAClE3B,EAAEkC,OAAOoY,cAAcA,cAAc1B,SAAS,GAAGrX,UAAUI,OAAO,sBAClE3B,EAAEkC,OAAOoY,cAAcA,cAAc1B,SAAS,GAAGrX,UAAUI,OAAO,sBAClE3B,EAAEkC,OAAOoY,cAAcA,cAAc1B,SAAS,GAAGrX,UAAUI,OAAO,sBAClE3B,EAAEkC,OAAOoY,cAAcA,cAAc1B,SAAS,GAAGrX,UAAUI,OAAO,qBAEpE,GChBF,GAXyB,KACvB,MAAM4Y,EAAiBla,SAASW,cAAc,qBACxCwZ,EAAmBna,SAASW,cAAc,gBAChDuZ,EAAezY,YAEf0Y,EAAiBzY,iBAAiB,SAAU/B,IAC1CK,SAASW,cAAc,iBAAiBqT,aAAa,WAAY,SACjEkG,EAAevY,OAAO,GACtB,ECwHJ,GAzHkBhC,IACOK,SAASW,cAAc,oBAA9C,MACMyZ,EAAgBza,EAAEkC,OAAOkU,QAAQ,cACjCsE,EAASD,EAAclG,GACvBoG,EAAYF,EAAc7B,SAAS,GAAGtX,YACtCsZ,EAAkBH,EAAc7B,SAAS,GAAGtX,YAC5CuZ,EAAc,GAAGnI,GACrB+H,EAAc7B,SAAS,GAAGtX,YAC1B,iBACGoR,GAAO+H,EAAc7B,SAAS,GAAGtX,YAAa,WAC7CwZ,EAAeL,EAAc7B,SAAS,GAAGA,SAAS,GAAGtX,YAAY6Y,OACjEY,EAAWN,EAAc7B,SAAS,GAAGA,SAAS,GAAGtX,YACjD0Z,EAAgBP,EAAc7B,SAAS,GAAGA,SAAS,GAAGf,QACtDoD,EAAiB5a,SAASW,cAAc,iBAAiBwV,UACzD0E,EACJT,EAAc7B,SAAS,GAAGA,SAAS,GAAGtX,YAAY6Y,OAIpD9Z,SAASW,cAAc,eAAesB,MAAQqY,EAC9Cta,SAASW,cAAc,qBAAqBsB,MAAQsY,EACpDva,SAASW,cAAc,iBAAiBsB,MAAQuY,EAChDxa,SACGW,cAAc,iBACdqT,aAAa,MAAO3B,GAAO,IAAInQ,KAAQ,qBAC1ClC,SACGW,cAAc,kBACd4X,SAAS,GAAGuC,gBAAgB,YAC/B9a,SAASW,cAAc,kBAAkBsB,MAAQwY,EACjDza,SACGW,cAAc,kBACdqT,aAAa,WAAYyG,GAC5Bza,SAASW,cAAc,eAAesB,MAAQyY,EAC9C1a,SAASW,cAAc,gBAAgBsB,MAAQ0Y,EAC/C3a,SACGW,cAAc,gBACdqT,aAAa,WAAY2G,GAC5B3a,SAASW,cAAc,sBAAsBwV,UAAYyE,EACzD5a,SAASW,cAAc,sBAAsBsB,MAAQ4Y,EACrD7a,SACGW,cAAc,sBACdqT,aAAa,WAAY6G,GA2E5B7a,SACGW,cAAc,aACde,iBAAiB,UA3ED,KACjB,MAAMqZ,EAAU/a,SAASW,cAAc,eAAesB,MAChD+Y,EAAgBhb,SAASW,cAAc,qBAAqBsB,MAC5DgZ,EAAYjb,SAASW,cAAc,iBAAiBsB,MACpDiZ,EAAalb,SAASW,cAAc,kBAAkBsB,MACtDkZ,EAASnb,SAASW,cAAc,eAAesB,MAC/CmZ,EAAcpb,SAASW,cAAc,gBAAgBsB,MACrDoZ,EACJrb,SAASW,cAAc,sBAAsBsB,MAE/C,IAAIqZ,EAAY,IAAI,GAClBP,EACAC,EACAC,EACAC,EACAC,EACAE,GAOF,GAJKC,EAAU7E,UADC,SAAhB2E,EAKIP,IAAoBS,EAAU9F,YAAa,CAC7C,IAAIiE,EAAW,KACX9B,EAAY8B,EAASjB,MACtBvD,GAAYA,EAAQhB,OAAS4G,IAG5BU,EAA0B5D,EAAUrD,MAAMxN,WAC3C8P,GAASA,EAAK1C,KAAOmG,IAExB1C,EAAUrD,MAAM2B,OAAOsF,EAAyB,EAAGD,GACnD,GAAmB7B,GACnBW,EAAchZ,SACd,GAAoByZ,GACC,IAAI7a,SAAS4Z,iBAAiB,kBACtCvG,KAAK2C,IACZA,EAAGuC,SAAS,GAAGtX,YAAY6Y,SAAWe,GACxCnB,YAAW,KACT1D,EAAG2D,OAAO,GACT,EACL,GAEJ,KAAO,CAEL,IAAIF,EAAW,KACX+B,EAAgB/B,EAASjB,MAC1BvD,GAAYA,EAAQhB,OAASqH,EAAU9F,cAEtCiG,EAAgBhC,EAASjB,MAC1BvD,GAAYA,EAAQhB,OAAS4G,IAE5Ba,EAAcD,EAAcnH,MAAMxN,WACnC8P,GAASA,EAAK1C,KAAOmG,IAExBoB,EAAcnH,MAAM2B,OAAOyF,EAAa,GACxCF,EAAclH,MAAMU,KAAKsG,GACzB,GAAmB7B,GACnBW,EAAchZ,SACd,GAAoBka,EAAU9F,aACT,IAAIxV,SAAS4Z,iBAAiB,kBACtCvG,KAAK2C,IACZA,EAAGuC,SAAS,GAAGtX,YAAY6Y,SAAWwB,EAAU9F,aAClDkE,YAAW,KACT1D,EAAG2D,OAAO,GACT,EACL,GAEJ,CACA,IAAc,GAK0B,CAAEgC,MAAM,GAAO,EC7G3D,GAZ0B,KACxB,MAAM1D,EAAiBjY,SAASW,cAAc,oBAC9C,IAAIib,EAAW,GACA,KACNvI,KAAK2C,GAAQ4F,EAAWA,EAAS/C,OAAO7C,EAAG1B,SAEpD,MAAM4D,EAAU0D,EAASzD,QAAQvB,GAASmC,GAAQ,IAAI7W,KAAK0U,EAAKN,YAChE2B,EAAe9B,UAAY,GAE3B,GAAU+B,EAASD,EAAe,ECEpC,GAX6B,KAC3B,MAAMA,EAAiBjY,SAASW,cAAc,oBAC9C,IAAIib,EAAW,GACA,KACNvI,KAAK2C,GAAQ4F,EAAWA,EAAS/C,OAAO7C,EAAG1B,SAEpD,MAAM4D,EAAU0D,EAASzD,QAAQvB,GAASwC,GAAW,IAAIlX,KAAK0U,EAAKN,YACnE2B,EAAe9B,UAAY,GAC3B,GAAU+B,EAASD,EAAe,ECEpC,GAVyB,KACvB,MAAMA,EAAiBjY,SAASW,cAAc,oBAC9C,IAAIib,EAAW,GACA,KACNvI,KAAK2C,GAAQ4F,EAAWA,EAAS/C,OAAO7C,EAAG1B,SACpD,MAAM4D,EAAU0D,EAASzD,QAAQvB,GAAS6B,GAAS,IAAIvW,KAAK0U,EAAKN,YACjE2B,EAAe9B,UAAY,GAC3B,GAAU+B,EAASD,EAAe,ECcrB,MACb,KACA,IAAIwB,EAAW,KAEf,KACA,MAAMoC,EAAS7b,SAASW,cAAc,SAChCmb,EAAS9b,SAASW,cAAc,YAEtCkb,EAAO3b,IAAM,EACb4b,EAAO5b,IAAM,EACb2b,EAAOE,IAAM,iBACbD,EAAOC,IAAM,cAEb/b,SAASW,cAAc,uBAAuBgZ,QAC7B,OAAbF,GACF,GAAoBA,EAAS,GAAGxF,MAIlC,KACA,KAEA,KAGiB,OAAbwF,GACFA,EACGtB,QAAQH,GAAuB,UAAdA,EAAK/D,OACtBZ,KAAK2C,IACJ,GAAmBA,EAAG,IAK5BpW,OAAO8B,iBAAiB,oBAAoB,KACtC9B,OAAOuB,YAAc,IACvBnB,SAASW,cAAc,iBAAiBM,YAAc,OAEtDjB,SAASW,cAAc,iBAAiBM,YAAc,WACxD,IAEFrB,OAAO8B,iBAAiB,UAAU,KAEhC,GAAkB,IAGpB1B,SAASW,cAAc,SAASe,iBAAiB,SAAU/B,IAErDA,EAAEkC,OAAOkU,QAAQ,kBACnB,IAGEpW,EAAEkC,OAAOkU,QAAQ,oBACnB,GAAWpW,GACX,MAEEA,EAAEkC,OAAOkU,QAAQ,gBACnB,GAAuBpW,GACvB8Z,EAAW,MAET9Z,EAAEkC,OAAOkU,QAAQ,kBACnBiG,KACA,GAASrc,GACT,KACF,IAGFK,SAASW,cAAc,cAAce,iBAAiB,SAAU/B,IAO9D,GALIA,EAAEkC,OAAOkU,QAAQ,SACnB,IAIEpW,EAAEkC,OAAOkU,QAAQ,uBAAwB,CAE3C,GADoB,QAEtB,CAEA,GAAIpW,EAAEkC,OAAOkU,QAAQ,iBAAkB,CACrC,MACMkG,EADatc,EAAEkC,OAAOkU,QAAQ,iBACRpV,cAAc,aAAaM,YACvD,GAAiB,UAAbgb,EACF,OAAQA,GACN,IAAK,QACH,KACA,MACF,IAAK,WACH,KACA,MACF,IAAK,OACH,KAIR,KAGFjc,SAASW,cAAc,YAAYe,iBAAiB,SAAU/B,IAExC,YAAhBA,EAAEkC,OAAOqS,IACX,GAAcvU,GAGZA,EAAEkC,OAAOkU,QAAQ,iBAEnB/V,SAASW,cAAc,uBAAuBgZ,QAC7B,OAAbF,GACF,GAAoBA,EAAS,GAAGxF,MAEpC,IAGFjU,SACGW,cAAc,yBACde,iBAAiB,SAAU/B,IAEtBA,EAAEkC,OAAOkU,QAAQ,gBACnB,IAIkB,gBAAhBpW,EAAEkC,OAAOqS,IACX,EAASvU,EACX,IAGmBK,SAASW,cAAc,iBAE/Be,iBAAiB,SAEhC,SAAyB/B,GACvB,GAAIA,EAAEkC,OAAOkU,QAAQ,oBAInB,OAFA,GAAcpW,QACdK,SAASW,cAAc,oBAAoBwV,UAAY,IAGrDxW,EAAEkC,OAAOkU,QAAQ,kBACnB,GACEpW,EAAEkC,OAAOkU,QAAQ,iBAAiBwC,SAAS,GAAGtX,YAGpD,KCtKF,E","sources":["webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/global","webpack://todo-list/webpack/runtime/publicPath","webpack://todo-list/./src/UI/Panel/hidesPanel.js","webpack://todo-list/./src/UI/Panel/showsPanel.js","webpack://todo-list/./src/UI/Panel/togglePanelIcons.js","webpack://todo-list/./src/UI/Panel/togglePanel.js","webpack://todo-list/./src/UI/Dialog/toggleAddTodoDialog.js","webpack://todo-list/./src/UI/Dropdown/dropdown.js","webpack://todo-list/./src/UI/Dropdown/toggleAddProjectDialog.js","webpack://todo-list/./node_modules/date-fns/isDate.mjs","webpack://todo-list/./node_modules/date-fns/toDate.mjs","webpack://todo-list/./node_modules/date-fns/isValid.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://todo-list/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://todo-list/./node_modules/date-fns/constants.mjs","webpack://todo-list/./node_modules/date-fns/startOfDay.mjs","webpack://todo-list/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://todo-list/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://todo-list/./node_modules/date-fns/constructFrom.mjs","webpack://todo-list/./node_modules/date-fns/startOfYear.mjs","webpack://todo-list/./node_modules/date-fns/getDayOfYear.mjs","webpack://todo-list/./node_modules/date-fns/startOfWeek.mjs","webpack://todo-list/./node_modules/date-fns/startOfISOWeek.mjs","webpack://todo-list/./node_modules/date-fns/getISOWeekYear.mjs","webpack://todo-list/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://todo-list/./node_modules/date-fns/getISOWeek.mjs","webpack://todo-list/./node_modules/date-fns/getWeekYear.mjs","webpack://todo-list/./node_modules/date-fns/startOfWeekYear.mjs","webpack://todo-list/./node_modules/date-fns/getWeek.mjs","webpack://todo-list/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://todo-list/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://todo-list/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://todo-list/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://todo-list/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://todo-list/./node_modules/date-fns/format.mjs","webpack://todo-list/./src/UI/DateLocal/resetCalendar.js","webpack://todo-list/./src/Models/Project.js","webpack://todo-list/./src/LocalStorage/getDataFromLocalStorage.js","webpack://todo-list/./src/LocalStorage/saveToLocalStorage.js","webpack://todo-list/./src/Logic/setDefaultProject.js","webpack://todo-list/./src/UI/Views/showProjectInPanel.js","webpack://todo-list/./src/UI/Crud/addProject.js","webpack://todo-list/./src/UI/Crud/deleteProject.js","webpack://todo-list/./src/Models/Todo.js","webpack://todo-list/./src/UI/Views/showTodos.js","webpack://todo-list/./src/UI/Views/showProjectAndTodos.js","webpack://todo-list/./src/UI/Views/inboxCounter.js","webpack://todo-list/./node_modules/date-fns/isFuture.mjs","webpack://todo-list/./src/UI/Views/nextCounter.js","webpack://todo-list/./node_modules/date-fns/isSameDay.mjs","webpack://todo-list/./node_modules/date-fns/isToday.mjs","webpack://todo-list/./src/UI/Views/todayCounter.js","webpack://todo-list/./node_modules/date-fns/addDays.mjs","webpack://todo-list/./node_modules/date-fns/isTomorrow.mjs","webpack://todo-list/./src/UI/Views/tomorrowCounter.js","webpack://todo-list/./src/UI/Views/showCounters.js","webpack://todo-list/./src/UI/Crud/addTodo.js","webpack://todo-list/./src/UI/Crud/deleteTodo.js","webpack://todo-list/./src/UI/Crud/settingTodoAsCompleted.js","webpack://todo-list/./src/UI/Dialog/toggleEditTodoDialog.js","webpack://todo-list/./src/UI/Crud/editTodo.js","webpack://todo-list/./src/UI/Views/showTodosForToday.js","webpack://todo-list/./src/UI/Views/showTodosForTomorrow.js","webpack://todo-list/./src/UI/Views/showTodosForNext.js","webpack://todo-list/./src/initUI.js","webpack://todo-list/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// Hides the left panel\nconst hidesPanel = () => {\n  const main = document.querySelector(\".main\");\n  const sidebar = document.querySelector(\".sidebar\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n\n  sidebar.style.display = \"none\";\n  main.style.gridColumn = \"1/3\";\n  toggPanelBtn.textContent = \"menu\";\n};\n\nexport default hidesPanel;\n","// Shows the left panel\nconst showsPanel = () => {\n  const main = document.querySelector(\".main\");\n  const sidebar = document.querySelector(\".sidebar\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n\n  sidebar.style.display = \"grid\";\n  main.style.gridColumn = \"2/3\";\n  toggPanelBtn.textContent = 'menu_open';\n  toggPanelBtn.classList.replace('menu-close', 'menu-open');\n};\n\nexport default showsPanel;\n","import hidesPanel from \"./hidesPanel\";\nimport showsPanel from \"./showsPanel\";\n\nconst togglePanelIcons = () => {\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n  if (window.innerWidth <= 700) {\n    toggPanelBtn.textContent = \"menu\";\n    toggPanelBtn.classList.remove(\"menu-open\");\n    toggPanelBtn.classList.add(\"menu-close\");\n    hidesPanel();\n  } else {\n    toggPanelBtn.textContent = \"menu_open\";\n    toggPanelBtn.classList.remove(\"menu-cloe\");\n    toggPanelBtn.classList.add(\"menu-open\");\n    showsPanel();\n  }\n};\n\nexport default togglePanelIcons;\n","import hidesPanel from \"./hidesPanel\";\nimport showsPanel from \"./showsPanel\";\n\nfunction togglePanel() {\n  const sidebar = document.querySelector(\".sidebar\");\n  const main = document.querySelector(\".main\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n   toggPanelBtn.classList.toggle(\"menu-open\");\n  toggPanelBtn.classList.toggle(\"menu-close\");\n  toggPanelBtn.textContent === \"menu_open\"\n    ? (toggPanelBtn.textContent = \"menu\")\n    : (toggPanelBtn.textContent = \"menu_open\");\n\n  if (toggPanelBtn.textContent === \"menu_open\") {\n    toggPanelBtn.textContent = \"menu_open\";\n    showsPanel();\n  } else {\n    toggPanelBtn.textContent = \"menu\";\n    hidesPanel();\n  }\n}\n\nexport default togglePanel;\n","const toggleAddTodoDialog = () => {\n  const dialogAddTask = document.querySelector(\"#dialog-add-task\");\n  const cancelAddButton = document.querySelector(\"#cancel-add\");\n  dialogAddTask.showModal();\n\n  cancelAddButton.addEventListener(\"click\", () => {\n    dialogAddTask.close();\n  });\n};\n\nexport default toggleAddTodoDialog;\n","const dropdown = (e) => {\n  const projectsBox = document.querySelector(\".projects-box\");\n  e.target.textContent === \"expand_less\"\n    ? (e.target.textContent = \"expand_more\")\n    : (e.target.textContent = \"expand_less\");\n  e.target.textContent === \"expand_less\"\n    ? (projectsBox.style.display = \"none\")\n    : (projectsBox.style.display = \"block\");\n};\n\nexport default dropdown;\n","const toggleAddProjectDialog = () => {\n  const projModal = document.querySelector(\"#dialog-add-project\");\n  const cancelProjBtn = document.querySelector(\"#cancel-add-project\");\n  projModal.showModal();\n  cancelProjBtn.addEventListener(\"click\", () => {\n    projModal.close();\n  });\n};\n\nexport default toggleAddProjectDialog;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const utcDate = new Date(\n    Date.UTC(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    startOfDayRight.getTime() -\n    getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff =\n    startOfISOWeek(_date).getTime() - startOfISOWeekYear(_date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff =\n    startOfWeek(_date, options).getTime() -\n    startOfWeekYear(_date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.floor(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    const originalDate = options._originalDate || date;\n    const timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.floor(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, formatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate,\n  };\n\n  const result = formatStr\n    .match(longFormattingTokensRegExp)\n    .map(function (substring) {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map(function (substring) {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return \"'\";\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring);\n      }\n\n      const formatter = formatters[firstCharacter];\n      if (formatter) {\n        if (\n          !options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(substring)\n        ) {\n          warnOrThrowProtectedError(substring, formatStr, String(date));\n        }\n        if (\n          !options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(substring)\n        ) {\n          warnOrThrowProtectedError(substring, formatStr, String(date));\n        }\n        return formatter(\n          originalDate,\n          substring,\n          locale.localize,\n          formatterOptions,\n        );\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return substring;\n    })\n    .join(\"\");\n\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { format } from \"date-fns\";\nconst resetCalendar = (e) => {\n  e.target.setAttribute(\"min\", format(new Date(), \"yyyy-MM-dd HH:MM\"));\n};\n\nexport default resetCalendar;\n","const Project = function (name) {\n    this.id = self.crypto.randomUUID();\n    this.name = name;\n    this.todos = [];\n  };\n\n  export default Project;","const getDataFromLocalStorage = () => {\n  const parsed = JSON.parse(localStorage.getItem(\"todolist\"));\n  return parsed;\n};\n\nexport default getDataFromLocalStorage;","const saveToLocalStorage = (data) => {\n  return localStorage.setItem(\"todolist\", JSON.stringify(data));\n};\n\nexport default saveToLocalStorage;\n","import Project from \"../Models/Project\";\nimport getDataFromLocalStorage from \"../LocalStorage/getDataFromLocalStorage\";\nimport saveToLocalStorage from \"../LocalStorage/saveToLocalStorage\";\n\nconst setDefaultProject = () => {\n  // Set default project in locaStorage\n  if (getDataFromLocalStorage() === null) {\n    saveToLocalStorage([]);\n    const defaultproject = new Project(\"Inbox\");\n    const parsed = getDataFromLocalStorage();\n    parsed.push(defaultproject);\n    saveToLocalStorage(parsed);\n  }\n};\n\nexport default setDefaultProject;\n","const showProjectInPanel = (project) => {\n  const projectsBox = document.querySelector(\".projects-box\");\n  const element = document.createElement(\"button\");\n  const folderIcon = document.createElement(\"span\");\n  const projectText = document.createElement(\"span\");\n  const deleteButton = document.createElement(\"span\");\n  const counter = document.createElement(\"span\");\n  const projectName = document.querySelector(\"#project_name\");\n  const option = document.createElement(\"option\");\n  option.setAttribute(\"value\", project.name);\n  option.textContent = project.name;\n  element.classList.add(\"project-item\");\n  element.setAttribute(\"id\", project.id);\n  folderIcon.classList.add(\n    \"material-symbols-rounded\",\n    \"project-icon\",\n    \"notranslate\"\n  );\n  folderIcon.textContent = \"folder\";\n  projectText.classList.add(\"project-txt\");\n  projectText.textContent = project.name;\n  deleteButton.setAttribute(\"id\", \"delete-proj-btn\");\n  deleteButton.classList.add(\n    \"material-symbols-rounded\",\n    \"project-icon\",\n    \"notranslate\"\n  );\n  deleteButton.textContent = \"delete\";\n  counter.classList.add(\"counter\");\n  element.appendChild(folderIcon);\n  element.appendChild(projectText);\n  element.appendChild(deleteButton);\n  element.appendChild(counter); \n  projectsBox.appendChild(element);\n  projectName.appendChild(option);\n};\n\nexport default showProjectInPanel;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport saveToLocalStorage from \"../../LocalStorage/saveToLocalStorage\";\nimport Project from \"../../Models/Project\";\nimport showProjectInPanel from \"../Views/showProjectInPanel\";\n\nconst addProject = () => {\n  const addProjectForm = document.querySelector(\"#add-project-form\");\n  const name = document.querySelector(\"#name\");\n  // Adds new Projects to localStorage\n  addProjectForm.addEventListener(\"submit\", () => {\n    const newProject = new Project(name.value);\n    const parsed = getDataFromLocalStorage();\n    parsed.push(newProject);\n    saveToLocalStorage(parsed);\n    addProjectForm.reset();\n    showProjectInPanel(newProject);\n  });\n};\n\nexport default addProject;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport saveToLocalStorage from \"../../LocalStorage/saveToLocalStorage\";\n\nconst deleteProject = (e) => {\n  const projectName = document.querySelector(\"#project_name\");\n  // Delete projects from localStorage\n  const parsed = getDataFromLocalStorage();\n  const myHtmlItem = e.target.closest(\".project-item\");\n  const id = myHtmlItem.id;\n  parsed.map((el, index) => {\n    if (el.id === id) {\n      parsed.splice(index, 1);\n      saveToLocalStorage(parsed);\n      myHtmlItem.remove();\n      const projectsAfterRemove = getDataFromLocalStorage();\n      projectName.innerHTML = \"\";\n      projectsAfterRemove.map((el) => {\n        const option = document.createElement(\"option\");\n        option.setAttribute(\"value\", el.name);\n        option.textContent = el.name;\n        projectName.appendChild(option);\n      });\n    }\n  });\n  \n};\nexport default deleteProject;\n","const Todo = function (\n  title,\n  description,\n  dueDate,\n  priority,\n  notes,\n  projectName = \"Inbox\"\n) {\n  this.id = self.crypto.randomUUID();\n  this.title = title;\n  this.description = description;\n  this.dueDate = dueDate;\n  this.priority = priority;\n  this.notes = notes;\n  this.projectName = projectName;\n  this.completed = false;\n};\nexport default Todo;\n","import { format } from \"date-fns\";\n\nconst showTodos = (todosArr, container) => {\n  todosArr.map((todo) => {\n    const todoItem = document.createElement(\"div\");\n    todoItem.classList.add(\"todo-item\");\n    todoItem.setAttribute(\"id\", todo.id);\n    const todoTitle = document.createElement(\"h3\");\n    todoTitle.textContent = todo.title;\n    todoTitle.classList.add(\"todo-title\");\n    const todoDesciption = document.createElement(\"p\");\n    todoDesciption.classList.add(\"todo-description\");\n    todoDesciption.textContent = todo.description;\n    const todoDueDate = document.createElement(\"div\");\n    todoDueDate.classList.add(\"todo-duedate\");\n    const spanDueDate = document.createElement(\"span\");\n    spanDueDate.textContent = \"Due Date:\";\n    const dueDate = document.createElement(\"span\");\n    dueDate.classList.add(\"due-date\");\n    dueDate.textContent = \" \" + format(todo.dueDate, \"MMMM dd y HH:mm\");\n    const todoPriority = document.createElement(\"div\");\n    const spanPriority = document.createElement(\"span\");\n    const priority = document.createElement(\"span\");\n    const notes = document.createElement(\"div\");\n    const notesTitle = document.createElement(\"span\");\n    const note = document.createElement(\"p\");\n    const label = document.createElement(\"label\");\n    const input = document.createElement(\"input\");\n    input.type = \"checkbox\";\n    input.checked = todo.completed;\n    input.checked === true\n      ? todoItem.classList.add(\"todo-completed-bg\")\n      : todoItem.classList.remove(\"todo-completed-bg\");\n\n    input.checked === true\n      ? todoTitle.classList.add(\"todo-completed-txt\")\n      : todoTitle.classList.remove(\"todo-completed-txt\");\n    input.checked === true\n      ? todoDesciption.classList.add(\"todo-completed-txt\")\n      : todoDesciption.classList.remove(\"todo-completed-txt\");\n    input.checked === true\n      ? todoDueDate.classList.add(\"todo-completed-txt\")\n      : todoDueDate.classList.remove(\"todo-completed-txt\");\n    input.checked === true\n      ? todoPriority.classList.add(\"todo-completed-txt\")\n      : todoPriority.classList.remove(\"todo-completed-txt\");\n\n    input.checked === true\n      ? notes.classList.add(\"todo-completed-txt\")\n      : notes.classList.remove(\"todo-completed-txt\");\n\n    input.classList.add(\"completed\");\n    label.classList.add(\"completed-label\");\n    label.textContent = \"Completed\";\n    note.classList.add(\"note\");\n    note.textContent = todo.notes;\n    notesTitle.classList.add(\"notes-title\");\n    notesTitle.textContent = \"Notes:\";\n    notes.classList.add(\"notes\");\n    priority.classList.add(\"priority\");\n    priority.textContent = \" \" + todo.priority;\n    spanPriority.textContent = \"Priority:\";\n    todoPriority.classList.add(\"todo-priority\");\n    todoPriority.appendChild(spanPriority);\n    todoPriority.appendChild(priority);\n    todoDueDate.appendChild(spanDueDate);\n    todoDueDate.appendChild(dueDate);\n    notes.appendChild(notesTitle);\n    notes.appendChild(note);\n    label.appendChild(input);\n    const projectNameTitle = document.createElement(\"div\");\n    projectNameTitle.classList.add(\"project-name-title\");\n    const projectLogo = document.createElement(\"span\");\n    projectLogo.classList.add(\n      \"material-symbols-rounded\",\n      \"project-logo\",\n      \"notranslate\"\n    );\n    projectLogo.textContent = \"numbers\";\n    projectNameTitle.appendChild(projectLogo);\n    const myProject = document.createElement(\"span\");\n    myProject.classList.add(\"my-project\");\n    myProject.textContent = \" \" + todo.projectName;\n    projectNameTitle.appendChild(myProject);\n    const todoButtons = document.createElement(\"div\");\n    todoButtons.classList.add(\"todo-buttons\");\n    const editButton = document.createElement(\"button\");\n    const editLogo = document.createElement(\"span\");\n    editLogo.classList.add(\n      \"material-symbols-rounded\",\n      \"edit-logo\",\n      \"notranslate\"\n    );\n    editLogo.textContent = \"edit\";\n    editButton.classList.add(\"edit-button\");\n    editButton.textContent = \"Edit\";\n    editButton.appendChild(editLogo);\n    const deleteButton = document.createElement(\"button\");\n    deleteButton.type = \"button\";\n    deleteButton.classList.add(\"delete-button\");\n    deleteButton.textContent = \"Delete\";\n    const deleteLogo = document.createElement(\"span\");\n    deleteLogo.classList.add(\n      \"material-symbols-rounded\",\n      \"delete-logo\",\n      \"notranslate\"\n    );\n    deleteLogo.textContent = \"delete\";\n    deleteButton.appendChild(deleteLogo);\n    todoButtons.appendChild(editButton);\n    todoButtons.appendChild(deleteButton);\n    todoItem.appendChild(todoTitle);\n    todoItem.appendChild(todoDesciption);\n    todoItem.appendChild(todoDueDate);\n    todoItem.appendChild(todoPriority);\n    todoItem.appendChild(notes);\n    todoItem.appendChild(label);\n    todoItem.appendChild(projectNameTitle);\n    todoItem.appendChild(todoButtons);\n    container.appendChild(todoItem);\n  });\n};\n\nexport default showTodos;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport showTodos from \"./showTodos\";\n\nconst showProjectAndTodos = (proj) => {\n  const todosContainer = document.querySelector(\".todos-container\");\n  todosContainer.innerHTML = \"\";\n  const todolist = getDataFromLocalStorage();\n  const myProject = todolist.filter((list) => list.name === proj)[0];\n  const myTodos = myProject.todos;\n  showTodos(myTodos, todosContainer);\n};\n\nexport default showProjectAndTodos;","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\n\nconst inboxCounter = () => {\nlet inboxOneCounter = document.querySelector('#inboxCounter');\nlet inboxTwoCounter = document.querySelector('#inbox-in-projects-box').children[2];\nlet todolist = getDataFromLocalStorage();\nlet count = todolist.find(el => el.name === 'Inbox').todos.length;\n\ninboxOneCounter.textContent = count;\ninboxTwoCounter.textContent = count;\n}\n\nexport default inboxCounter;","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * const result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nexport function isFuture(date) {\n  return +toDate(date) > Date.now();\n}\n\n// Fallback for modularized imports:\nexport default isFuture;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport { isFuture } from \"date-fns\";\nconst nextCounter = () => {\n    let nextCounter = document.querySelector(\"#nextCounter\");\n    let nextTodos = [];\n    let todolist = getDataFromLocalStorage();\n    todolist.map((el) => (nextTodos = nextTodos.concat(el.todos)));\n    const myTodos = nextTodos.filter((todo) =>\n      isFuture(new Date(todo.dueDate))\n    );\n    nextCounter.textContent = myTodos.length;\n}\n\nexport default nextCounter;","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { isSameDay } from \"./isSameDay.mjs\";\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date) {\n  return isSameDay(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport { isToday } from \"date-fns\";\n\nconst todayCounter = () => {\n  let todayCounter = document.querySelector(\"#todayCounter\");\n  let todayTodos = [];\n  let todolist = getDataFromLocalStorage();\n  todolist.map((el) => (todayTodos = todayTodos.concat(el.todos)));\n  const myTodos = todayTodos.filter((todo) => isToday(new Date(todo.dueDate)));\n  todayCounter.textContent = myTodos.length;\n};\n\nexport default todayCounter;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addDays } from \"./addDays.mjs\";\nimport { isSameDay } from \"./isSameDay.mjs\";\n\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is tomorrow\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nexport function isTomorrow(date) {\n  return isSameDay(date, addDays(Date.now(), 1));\n}\n\n// Fallback for modularized imports:\nexport default isTomorrow;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport { isTomorrow } from \"date-fns\";\n\nconst tomorrowCounter = () => {\n  let tomorrowCounter = document.querySelector(\"#tomorrowCounter\");\n  let tomorrowTodos = [];\n  let todolist = getDataFromLocalStorage();\n  todolist.map((el) => (tomorrowTodos = tomorrowTodos.concat(el.todos)));\n  const myTodos = tomorrowTodos.filter((todo) =>\n    isTomorrow(new Date(todo.dueDate))\n  );\n  tomorrowCounter.textContent = myTodos.length;\n};\n\nexport default tomorrowCounter;\n","import inboxCounter from \"./inboxCounter\";\nimport nextCounter from \"./nextCounter\";\nimport todayCounter from \"./todayCounter\";\nimport tomorrowCounter from \"./tomorrowCounter\";\n\nconst showCounters = () => {\n  inboxCounter();\n  todayCounter();\n  tomorrowCounter();\n  nextCounter();\n};\n\nexport default showCounters;\n","import Todo from \"../../Models/Todo\";\nimport getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport saveToLocalStorage from \"../../LocalStorage/saveToLocalStorage\";\nimport showProjectAndTodos from \"../Views/showProjectAndTodos\";\nimport showCounters from \"../Views/showCounters\";\nconst addTodo = () => {\n  const todoForm = document.querySelector(\"#addForm\");\n  todoForm.addEventListener(\"submit\", () => {\n    const title = document.querySelector(\"#title\");\n    const description = document.querySelector(\"#description\");\n    const dueDate = document.querySelector(\"#dueDate\");\n    const priority = document.querySelector(\"#priority\");\n    const notes = document.querySelector(\"#notes\");\n    const projectName = document.querySelector(\"#project_name\");\n    const newTodo = new Todo(\n      title.value,\n      description.value,\n      dueDate.value,\n      priority.value,\n      notes.value,\n      projectName.value\n    );\n    const todolist = getDataFromLocalStorage();\n    todolist.map((project) => {\n      if (project.name === projectName.value) {\n        project.todos.push(newTodo);\n        saveToLocalStorage(todolist);\n        showProjectAndTodos(project.name);\n        // Set the focus in .poject-item buttons when one todo is created\n        setTimeout(() => {\n          if (project.name === \"Inbox\") {\n            document.querySelector(\"#inbox-in-projects-box\").focus();\n          }\n\n          const projectItems = [...document.querySelectorAll(\".project-item\")];\n          projectItems.filter((el) => {\n            if (el.children[1].textContent === project.name) {\n              el.focus();\n            }\n          });\n        }, 0);\n      }\n    });\n    todoForm.reset();\n    showCounters();\n  });\n};\n\nexport default addTodo;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport saveToLocalStorage from \"../../LocalStorage/saveToLocalStorage\";\nimport showCounters from \"../Views/showCounters\";\nimport showProjectAndTodos from \"../Views/showProjectAndTodos\";\n\nconst deleteTodo = (e) => {\n  const todolist = getDataFromLocalStorage();\n  const todoItemContainer = e.target.closest(\".todo-item\");\n  const projectName = todoItemContainer\n    .querySelector(\".my-project\")\n    .textContent.trim();\n  const myProject = todolist.find((project) => project.name === projectName);\n  let myTodos = myProject.todos;\n  if (todolist !== null) {\n    const myTodoIndex = myTodos.findIndex(\n      (todo) => todo.id === todoItemContainer.id\n    );\n\n    myTodos.splice(myTodoIndex, 1); // Remove the todo in localStorage\n    saveToLocalStorage(todolist);\n    showProjectAndTodos(projectName);\n  }\n  showCounters();\n};\n\nexport default deleteTodo;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport saveToLocalStorage from \"../../LocalStorage/saveToLocalStorage\";\n\nconst settingTodoAsCompleted = (e) => {\n  const todolist = getDataFromLocalStorage();\n  if (todolist !== null) {\n    const projectName = document\n      .querySelector(\".my-project\")\n      .textContent.trim();\n    const myProject = todolist.find((project) => project.name === projectName);\n    const myTodos = myProject.todos;\n    const myTodo = myTodos.filter(\n      (todo) => todo.id === e.target.parentElement.parentElement.id\n    )[0];\n\n    myTodo.completed === false\n      ? (myTodo.completed = true)\n      : (myTodo.completed = false);\n    saveToLocalStorage(todolist);\n\n    e.target.parentElement.parentElement.classList.toggle(\"todo-completed-bg\");\n    e.target.parentElement.parentElement.children[0].classList.toggle(\"todo-completed-txt\");\n    e.target.parentElement.parentElement.children[1].classList.toggle(\"todo-completed-txt\");\n    e.target.parentElement.parentElement.children[2].classList.toggle(\"todo-completed-txt\");\n    e.target.parentElement.parentElement.children[3].classList.toggle(\"todo-completed-txt\");\n    e.target.parentElement.parentElement.children[4].classList.toggle(\"todo-completed-txt\");\n    \n  }\n};\n\nexport default settingTodoAsCompleted;\n","const toggleEditDialog = () => {\n  const dialogEditTask = document.querySelector(\"#dialog-edit-task\");\n  const cancelEditButton = document.querySelector(\"#cancel-edit\");\n  dialogEditTask.showModal();\n\n  cancelEditButton.addEventListener(\"click\", (e) => {\n    document.querySelector(\"#project_name\").setAttribute(\"selected\", \"Inbox\");\n    dialogEditTask.close();\n  });\n};\n\nexport default toggleEditDialog;\n","import { format } from \"date-fns\";\nimport Todo from \"../../Models/Todo\";\nimport getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport saveToLocalStorage from \"../../LocalStorage/saveToLocalStorage\";\nimport showProjectAndTodos from \"../Views/showProjectAndTodos\";\nimport showCounters from \"../Views/showCounters\";\n\nconst editTodo = (e) => {\n  const todosContainer = document.querySelector(\".todos-container\");\n  const itemContainer = e.target.closest(\".todo-item\");\n  const itemId = itemContainer.id;\n  const cardTitle = itemContainer.children[0].textContent;\n  const cardDescription = itemContainer.children[1].textContent;\n  const cardDueDate = `${format(\n    itemContainer.children[2].textContent,\n    \"yyyy-MM-dd\"\n  )}T${format(itemContainer.children[2].textContent, \"HH:mm\")}`;\n  const cardPriority = itemContainer.children[3].children[1].textContent.trim();\n  const cardNote = itemContainer.children[4].children[1].textContent;\n  const cardCompleted = itemContainer.children[5].children[0].checked; // Boolean value\n  const projectOptions = document.querySelector(\"#project_name\").innerHTML;\n  const cardProjectName =\n    itemContainer.children[6].children[1].textContent.trim();\n\n  // Get data from the card\n\n  document.querySelector(\"#edit-title\").value = cardTitle;\n  document.querySelector(\"#edit-description\").value = cardDescription;\n  document.querySelector(\"#edit-dueDate\").value = cardDueDate;\n  document\n    .querySelector(\"#edit-dueDate\")\n    .setAttribute(\"min\", format(new Date(), \"yyyy-MM-dd HH:MM\"));\n  document\n    .querySelector(\"#edit-priority\")\n    .children[0].removeAttribute(\"selected\");\n  document.querySelector(\"#edit-priority\").value = cardPriority;\n  document\n    .querySelector(\"#edit-priority\")\n    .setAttribute(\"selected\", cardPriority);\n  document.querySelector(\"#edit-notes\").value = cardNote;\n  document.querySelector(\"#isCompleted\").value = cardCompleted;\n  document\n    .querySelector(\"#isCompleted\")\n    .setAttribute(\"selected\", cardCompleted);\n  document.querySelector(\"#edit-project_name\").innerHTML = projectOptions;\n  document.querySelector(\"#edit-project_name\").value = cardProjectName;\n  document\n    .querySelector(\"#edit-project_name\")\n    .setAttribute(\"selected\", cardProjectName);\n\n  const handleEdit = () => {\n    const myTitle = document.querySelector(\"#edit-title\").value;\n    const myDescription = document.querySelector(\"#edit-description\").value;\n    const myDueDate = document.querySelector(\"#edit-dueDate\").value;\n    const myPriority = document.querySelector(\"#edit-priority\").value;\n    const myNote = document.querySelector(\"#edit-notes\").value;\n    const myCompleted = document.querySelector(\"#isCompleted\").value;\n    const mySelectedProject =\n      document.querySelector(\"#edit-project_name\").value;\n\n    let myTodoObj = new Todo(\n      myTitle,\n      myDescription,\n      myDueDate,\n      myPriority,\n      myNote,\n      mySelectedProject\n    );\n    myCompleted === \"true\"\n      ? (myTodoObj.completed = true)\n      : (myTodoObj.completed = false);\n\n    // Edit a todo in the same project\n    if (cardProjectName === myTodoObj.projectName) {\n      let todolist = getDataFromLocalStorage();\n      let myProject = todolist.find(\n        (project) => project.name === cardProjectName\n      );\n\n      let mylocalStorageTodoIndex = myProject.todos.findIndex(\n        (todo) => todo.id === itemId\n      );\n      myProject.todos.splice(mylocalStorageTodoIndex, 1, myTodoObj);\n      saveToLocalStorage(todolist);\n      itemContainer.remove();\n      showProjectAndTodos(cardProjectName);\n      const projectItems = [...document.querySelectorAll(\".project-item\")];\n      projectItems.map((el) => {\n        if (el.children[1].textContent.trim() === cardProjectName) {\n          setTimeout(() => {\n            el.focus();\n          }, 0);\n        }\n      });\n    } else {\n      // Moves a todo to other project\n      let todolist = getDataFromLocalStorage();\n      let projectTarjet = todolist.find(\n        (project) => project.name === myTodoObj.projectName\n      );\n      let actualProject = todolist.find(\n        (project) => project.name === cardProjectName\n      );\n      let actualIndex = actualProject.todos.findIndex(\n        (todo) => todo.id === itemId\n      );\n      actualProject.todos.splice(actualIndex, 1);\n      projectTarjet.todos.push(myTodoObj);\n      saveToLocalStorage(todolist);\n      itemContainer.remove();\n      showProjectAndTodos(myTodoObj.projectName);\n      const projectItems = [...document.querySelectorAll(\".project-item\")];\n      projectItems.map((el) => {\n        if (el.children[1].textContent.trim() === myTodoObj.projectName) {\n          setTimeout(() => {\n            el.focus();\n          }, 0);\n        }\n      });\n    }\n    showCounters();\n  };\n\n  document\n    .querySelector(\"#editForm\")\n    .addEventListener(\"submit\", handleEdit, { once: true });\n};\n\nexport default editTodo;\n","import getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport { isToday } from \"date-fns\";\nimport showTodos from \"./showTodos\";\n\nconst showTodosForToday = () => {\n  const todosContainer = document.querySelector(\".todos-container\");\n  let allTodos = [];\n  let todolist = getDataFromLocalStorage();\n  todolist.map((el) => (allTodos = allTodos.concat(el.todos)));\n\n  const myTodos = allTodos.filter((todo) => isToday(new Date(todo.dueDate)));\n  todosContainer.innerHTML = \"\";\n\n  showTodos(myTodos, todosContainer);\n};\n\nexport default showTodosForToday;\n","import { isTomorrow } from \"date-fns\";\nimport getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport showTodos from \"./showTodos\";\n\nconst showTodosForTomorrow = () => {\n  const todosContainer = document.querySelector(\".todos-container\");\n  let allTodos = [];\n  let todolist = getDataFromLocalStorage();\n  todolist.map((el) => (allTodos = allTodos.concat(el.todos)));\n\n  const myTodos = allTodos.filter((todo) => isTomorrow(new Date(todo.dueDate)));\n  todosContainer.innerHTML = \"\";\n  showTodos(myTodos, todosContainer);\n};\n\nexport default showTodosForTomorrow;\n","import { isFuture } from \"date-fns\";\nimport getDataFromLocalStorage from \"../../LocalStorage/getDataFromLocalStorage\";\nimport showTodos from \"./showTodos\";\n\nconst showTodosForNext = () => {\n  const todosContainer = document.querySelector(\".todos-container\");\n  let allTodos = [];\n  let todolist = getDataFromLocalStorage();\n  todolist.map((el) => (allTodos = allTodos.concat(el.todos)));\n  const myTodos = allTodos.filter((todo) => isFuture(new Date(todo.dueDate)));\n  todosContainer.innerHTML = \"\";\n  showTodos(myTodos, todosContainer);\n};\n\nexport default showTodosForNext;\n","import \"./styles/main.css\";\nimport logoImg from \"./img/logo.svg\";\nimport logoGh from \"./img/github.svg\";\nimport togglePanelIcons from \"./UI/Panel/togglePanelIcons\";\nimport togglePanel from \"./UI/Panel/togglePanel\";\nimport toggleAddTodoDialog from \"./UI/Dialog/toggleAddTodoDialog\";\nimport dropdown from \"./UI/Dropdown/dropdown\";\nimport toggleAddProjectDialog from \"./UI/Dropdown/toggleAddProjectDialog\";\nimport resetCalendar from \"./UI/DateLocal/resetCalendar\";\nimport setDefaultProject from \"./Logic/setDefaultProject\";\nimport addProject from \"./UI/Crud/addProject\";\nimport deleteProject from \"./UI/Crud/deleteProject\";\nimport showProjectInPanel from \"./UI/Views/showProjectInPanel\";\nimport getDataFromLocalStorage from \"./LocalStorage/getDataFromLocalStorage\";\nimport addTodo from \"./UI/Crud/addTodo\";\nimport showProjectAndTodos from \"./UI/Views/showProjectAndTodos\";\nimport deleteTodo from \"./UI/Crud/deleteTodo\";\nimport settingTodoAsCompleted from \"./UI/Crud/settingTodoAsCompleted\";\nimport toggleEditTodoDialog from \"./UI/Dialog/toggleEditTodoDialog\";\nimport editTodo from \"./UI/Crud/editTodo\";\nimport showTodosForToday from \"./UI/Views/showTodosForToday\";\nimport showTodosForTomorrow from \"./UI/Views/showTodosForTomorrow\";\nimport showTodosForNext from \"./UI/Views/showTodosForNext\";\nimport showCounters from \"./UI/Views/showCounters\";\n\nconst initUI = () => {\n  showCounters();\n  let todolist = getDataFromLocalStorage();\n  // When the page is loaded set the default project Inbox into localStorage\n  setDefaultProject();\n  const myLogo = document.querySelector(\".logo\");\n  const ghLogo = document.querySelector(\".gh-logo\");\n  // Inject the main Logo and footer logo\n  myLogo.src = logoImg;\n  ghLogo.src = logoGh;\n  myLogo.alt = \"Todo List Logo\";\n  ghLogo.alt = \"Github Logo\";\n  // When the page is loaded set the focus in Inbox\n  document.querySelector(\"#inbox-in-tasks-box\").focus();\n  if (todolist !== null) {\n    showProjectAndTodos(todolist[0].name);\n  }\n\n  // Add todo\n  addTodo();\n  showCounters();\n  // Add projects\n  addProject();\n\n  // When the page is loaded shows the projects in the sidebar\n  if (todolist !== null) {\n    todolist\n      .filter((proj) => proj.name !== \"Inbox\")\n      .map((el) => {\n        showProjectInPanel(el);\n      });\n  }\n\n  // Change the sidebar open and close icons when the document is loaded\n  window.addEventListener(\"DOMContentLoaded\", () => {\n    if (window.innerWidth <= 700) {\n      document.querySelector(\"#toggPanelBtn\").textContent = \"menu\";\n    } else {\n      document.querySelector(\"#toggPanelBtn\").textContent = \"menu_open\";\n    }\n  });\n  window.addEventListener(\"resize\", () => {\n    // Change the sidebar open and close icons when the window is resized in function of the window width\n    togglePanelIcons();\n  });\n\n  document.querySelector(\".main\").addEventListener(\"click\", (e) => {\n    // Enable togglePanel at click on button\n    if (e.target.closest(\"#toggPanelBtn\")) {\n      togglePanel();\n    }\n\n    if (e.target.closest(\".delete-button\")) {\n      deleteTodo(e);\n      showCounters();\n    }\n    if (e.target.closest(\".completed\")) {\n      settingTodoAsCompleted(e);\n      todolist = getDataFromLocalStorage();\n    }\n    if (e.target.closest(\".edit-button\")) {\n      toggleEditTodoDialog();\n      editTodo(e);\n      showCounters();\n    }\n  });\n\n  document.querySelector(\".tasks-box\").addEventListener(\"click\", (e) => {\n    // Open and close the dialog for add Todos\n    if (e.target.closest(\".add\")) {\n      toggleAddTodoDialog();\n    }\n\n    // Shows Inbox todos in main\n    if (e.target.closest(\"#inbox-in-tasks-box\")) {\n      const projectName = \"Inbox\";\n      showProjectAndTodos(projectName);\n    }\n\n    if (e.target.closest(\".menu-element\")) {\n      const parentItem = e.target.closest(\".menu-element\");\n      const itemName = parentItem.querySelector(\".menu-txt\").textContent;\n      if (itemName !== \"Inbox\") {\n        switch (itemName) {\n          case \"Today\":\n            showTodosForToday();\n            break;\n          case \"Tomorrow\":\n            showTodosForTomorrow();\n            break;\n          case \"Next\":\n            showTodosForNext();\n            break;\n        }\n      }\n    }\n  });\n\n  document.querySelector(\"#addForm\").addEventListener(\"click\", (e) => {\n    // Set the default date of the date-local field at today as min property\n    if (e.target.id === \"dueDate\") {\n      resetCalendar(e);\n    }\n\n    if (e.target.closest(\"#cancel-add\")) {\n      // Set focus in Inbox when the user cancel in the addTodo form\n      document.querySelector(\"#inbox-in-tasks-box\").focus();\n      if (todolist !== null) {\n        showProjectAndTodos(todolist[0].name);\n      }\n    }\n  });\n\n  document\n    .querySelector(\".menu-element-project\")\n    .addEventListener(\"click\", (e) => {\n      // Open the dialog for add project\n      if (e.target.closest(\"#addProjBtn\")) {\n        toggleAddProjectDialog();\n      }\n\n      // Avtivate dropdown functionality for shows or hides projects in the projects box\n      if (e.target.id === \"collapseBtn\") {\n        dropdown(e);\n      }\n    });\n\n  const projectsParent = document.querySelector(\".projects-box\");\n\n  projectsParent.addEventListener(\"click\", handleShowChild);\n\n  function handleShowChild(e) {\n    if (e.target.closest(\"#delete-proj-btn\")) {\n      // delete project\n      deleteProject(e);\n      document.querySelector(\".todos-container\").innerHTML = \"\";\n      return;\n    }\n    if (e.target.closest(\".project-item\")) {\n      showProjectAndTodos(\n        e.target.closest(\".project-item\").children[1].textContent\n      );\n    }\n  }\n};\n\nexport default initUI;\n","import initUI from \"./initUI\";\n// Starts UI\ninitUI();"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","main","querySelector","sidebar","toggPanelBtn","style","display","gridColumn","textContent","classList","innerWidth","remove","add","toggle","dialogAddTask","cancelAddButton","showModal","addEventListener","close","projectsBox","target","projModal","cancelProjBtn","isDate","value","Date","Object","prototype","toString","call","toDate","argument","argStr","constructor","NaN","isValid","date","_date","isNaN","Number","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","array","predicate","findIndex","pattern","test","object","hasOwnProperty","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","getTime","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","constructFrom","startOfYear","cleanDate","setFullYear","getDayOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfISOWeekYear","fourthOfJanuary","getISOWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","floor","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","warnOrThrowProtectedError","format","input","_message","subject","message","console","warn","includes","RangeError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","matched","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","setAttribute","name","id","self","crypto","randomUUID","todos","JSON","parse","localStorage","getItem","data","setItem","stringify","defaultproject","parsed","push","project","element","createElement","folderIcon","projectText","deleteButton","counter","projectName","option","appendChild","addProjectForm","newProject","reset","myHtmlItem","closest","el","splice","projectsAfterRemove","innerHTML","title","description","dueDate","priority","notes","completed","todosArr","container","todo","todoItem","todoTitle","todoDesciption","todoDueDate","spanDueDate","todoPriority","spanPriority","notesTitle","note","label","type","checked","projectNameTitle","projectLogo","myProject","todoButtons","editButton","editLogo","deleteLogo","proj","todosContainer","myTodos","filter","list","inboxOneCounter","inboxTwoCounter","children","find","isFuture","now","nextCounter","nextTodos","concat","isSameDay","isToday","todayCounter","todayTodos","addDays","amount","isTomorrow","tomorrowCounter","tomorrowTodos","todoForm","newTodo","todolist","setTimeout","focus","querySelectorAll","todoItemContainer","trim","myTodoIndex","myTodo","parentElement","dialogEditTask","cancelEditButton","itemContainer","itemId","cardTitle","cardDescription","cardDueDate","cardPriority","cardNote","cardCompleted","projectOptions","cardProjectName","removeAttribute","myTitle","myDescription","myDueDate","myPriority","myNote","myCompleted","mySelectedProject","myTodoObj","mylocalStorageTodoIndex","projectTarjet","actualProject","actualIndex","once","allTodos","myLogo","ghLogo","alt","toggleEditTodoDialog","itemName"],"sourceRoot":""}