{"version":3,"file":"main.7e55dc1c1e5005a13126.js","mappings":"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","sources":["webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/global","webpack://todo-list/webpack/runtime/publicPath","webpack://todo-list/./src/UI/Views/notYetTasks/notYetTasks.js","webpack://todo-list/./src/UI/Panel/hidesPanel.js","webpack://todo-list/./src/UI/Panel/showsPanel.js","webpack://todo-list/./src/UI/Panel/togglePanelIcons.js","webpack://todo-list/./src/UI/Panel/togglePanel.js","webpack://todo-list/./src/UI/Dialog/toggleAddTaskDialog.js","webpack://todo-list/./src/UI/Dropdown/dropdown.js","webpack://todo-list/./src/Models/Project.js","webpack://todo-list/./src/Logic/setDefaultProject.js","webpack://todo-list/./src/initUI.js","webpack://todo-list/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const notYetTasks = () => {\n  const element = document.createElement(\"h1\");\n  element.textContent = \"No yet Tasks !\";\n  element.classList.add(\"noyet\");\n  return element;\n};\n\nexport default notYetTasks;\n","// Hides the left panel\nconst hidesPanel = () => {\n  const main = document.querySelector(\".main\");\n  const sidebar = document.querySelector(\".sidebar\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n\n  sidebar.style.display = \"none\";\n  main.style.gridColumn = \"1/3\";\n  toggPanelBtn.textContent = \"menu\";\n  toggPanelBtn.classList.replace('menu-open', 'menu-close');\n};\n\nexport default hidesPanel;\n","// Shows the left panel\nconst showsPanel = () => {\n  const main = document.querySelector(\".main\");\n  const sidebar = document.querySelector(\".sidebar\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n\n  sidebar.style.display = \"grid\";\n  main.style.gridColumn = \"2/3\";\n  toggPanelBtn.textContent = 'menu_open';\n  toggPanelBtn.classList.replace('menu-close', 'menu-open');\n};\n\nexport default showsPanel;\n","import hidesPanel from \"./hidesPanel\";\nimport showsPanel from \"./showsPanel\";\n\n// Change the open and close panel icons depending on the width of the window\n\nconst togglePanelIcons = () => {\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n  if (window.innerWidth < 700) {\n    toggPanelBtn.textContent = \"menu\";\n    toggPanelBtn.classList.remove(\"menu-open\");\n    toggPanelBtn.classList.add(\"menu-close\");\n    hidesPanel();\n  } else {\n    toggPanelBtn.textContent = \"menu_open\";\n    toggPanelBtn.classList.remove(\"menu-cloe\");\n    toggPanelBtn.classList.add(\"menu-open\");\n    showsPanel();\n  }\n};\n\nexport default togglePanelIcons;\n","function handlePanel() {\n  const sidebar = document.querySelector(\".sidebar\");\n  const main = document.querySelector(\".main\");\n  const toggPanelBtn = document.querySelector(\"#toggPanelBtn\");\n  toggPanelBtn.classList.toggle(\"menu-open\");\n  toggPanelBtn.classList.toggle(\"menu-close\");\n  toggPanelBtn.textContent === \"menu_open\"\n    ? (toggPanelBtn.textContent = \"menu\")\n    : (toggPanelBtn.textContent = \"menu_open\");\n  if (toggPanelBtn.textContent === \"menu_open\") {\n    sidebar.style.display = \"grid\";\n    main.style.gridColumn = \"2/3\";\n  } else {\n    sidebar.style.display = \"none\";\n    main.style.gridColumn = \"1/3\";\n  }\n}\n\nexport function togglePanel() {\n  toggPanelBtn.addEventListener(\"click\", handlePanel);\n}\n","import hidesPanel from \"../Panel/hidesPanel\";\nconst toggleAddTaskDialog = () => {\n  const dialogAddTask = document.querySelector(\"#dialog-add-task\");\n  const cancelAddButton = document.querySelector(\"#cancel-add\");\n \n  dialogAddTask.showModal();\n\n\n/*   cancelAddButton.addEventListener(\"click\", () => {\n    dialogAddTask.close();\n  }); */\n};\n\nexport default toggleAddTaskDialog;\n","const dropdown = (e) => {\n  const projectsBox = document.querySelector(\".projects-box\");\n  e.target.textContent === \"expand_less\"\n    ? (e.target.textContent = \"expand_more\")\n    : (e.target.textContent = \"expand_less\");\n  e.target.textContent === \"expand_less\"\n    ? (projectsBox.style.display = \"none\")\n    : (projectsBox.style.display = \"block\");\n};\n\nexport default dropdown;\n","const Project = function (name) {\n    this.id = self.crypto.randomUUID();\n    this.name = name;\n    this.todos = [];\n  };\n\n  export default Project;","import Project from \"../Models/Project\";\nconst setDefaultProject = () => {\n  // Set default project in locaStorage\n\n  if (JSON.parse(localStorage.getItem(\"todolist\")) === null) {\n    localStorage.setItem(\"todolist\", JSON.stringify([]));\n    const defaultproject = new Project(\"Inbox\");\n    const parsed = JSON.parse(localStorage.getItem(\"todolist\"));\n    parsed.push(defaultproject);\n    localStorage.setItem(\"todolist\", JSON.stringify(parsed));\n  }\n};\n\nexport default setDefaultProject;\n","import notYetTasks from \"./UI/Views/notYetTasks/notYetTasks\";\nimport \"./styles/main.css\";\nimport logoImg from \"./img/logo.svg\";\nimport togglePanelIcons from \"./UI/Panel/togglePanelIcons\";\nimport { togglePanel } from \"./UI/Panel/togglePanel\";\nimport toggleAddTaskDialog from \"./UI/Dialog/toggleAddTaskDialog\";\nimport dropdown from \"./UI/Dropdown/dropdown\";\nimport toggleAddProjectDialog from \"./UI/Dropdown/toggleAddProjectDialog\";\nimport resetCalendar from \"./UI/DateLocal/resetCalendar\";\nimport toggleFolderIcon from \"./UI/Dropdown/toggleFolderIcon\";\nimport setDefaultProject from \"./Logic/setDefaultProject\";\nimport addProject from \"./UI/Crud/addProject\";\nimport showProject from \"./UI/Views/showProject\";\n\nconst initUI = () => {\n  //When the page is loaded set the default project Inbox into localStorage\n  setDefaultProject();\n  const main = document.querySelector(\".main\");\n  const myLogo = document.querySelector(\".logo\");\n  // Injects the main Logo\n  myLogo.src = logoImg;\n  myLogo.alt = \"Todo List Logo\";\n  main.appendChild(notYetTasks());\n  // Change the sidebar open and close icons when the window is resized in function of the window width\n  togglePanel();\n  window.addEventListener(\"resize\", (e) => {\n    // Change the sidebar open and close icons when the DOM is loaded in function of the window width\n    togglePanelIcons(e);\n  });\n  // Enable togglePanel at click on button\n\n  document.addEventListener(\"click\", (e) => {\n    if (e.target.id === \"collapseBtn\") {\n      // Avtivate dropdown functionality for shows or hides projects in the projects box\n      dropdown(e);\n    }\n    if (e.target.className === 'add') {\n      toggleAddTaskDialog();\n    }\n  });\n\n  /* // Change the sidebar open and close icons when the DOM is loaded in function of the window width\n  togglePanelIcons();\n  // Toggle Projects dropdown menu\n  dropdown();\n  // Open the add project dialog\n  toggleAddProjectDialog();\n  // Set the default date of the date-local field at today as min property\n  resetCalendar();\n  toggleFolderIcon();\n  // Toggle the Panel at click on panel button\n  togglePanel();\n  // Toggle Add Task dialog\n  toggleAddTaskDialog(); */\n\n  /* addProject();\n  if(JSON.parse(localStorage.getItem('todolist')) !== null){\n    const parsed = JSON.parse(localStorage.getItem('todolist'));\n    parsed.filter(proj => proj.name !== 'Inbox').map(el => {showProject(el)})\n  } */\n};\n\nexport default initUI;\n","import initUI from \"./initUI\";\n// Starts UI\ninitUI();"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","element","createElement","textContent","classList","add","main","querySelector","sidebar","toggPanelBtn","style","display","gridColumn","innerWidth","remove","handlePanel","toggle","dialogAddTask","showModal","projectsBox","target","name","id","self","crypto","randomUUID","todos","JSON","parse","localStorage","getItem","setItem","stringify","defaultproject","parsed","push","myLogo","alt","appendChild","addEventListener","className"],"sourceRoot":""}